{"componentChunkName":"component---src-templates-post-template-js","path":"/Analisis-Algoritme/","webpackCompilationHash":"0c9955e359bddcb52503","result":{"data":{"post":{"id":"5272a3ca-0088-5fc1-868a-39a78e8ba323","html":"<p>Algoritma sebagai salah satu fundamental dari cabang ilmu komputer merupakan bagian terpenting untuk dikuasai oleh orang-orang yang berada di lingkungan ini. Mulai dari para programmer sebagai praktisi dalam dunia nyata ataupun para peneliti-peneliti yang meriset mengenai perkembangan ilmu komputer. </p>\n<!--more-->\n<p>Sebagai seorang yang terjun dalam bidang ilmu komputer, tentulah kita dituntut untuk dapat merancang serta mengembangkan algoritma berdasarkan masalah-masalah yang akan diselesaikan. Tentu dengan mempertimbangkan beberapa aspek yang nanti akan dibahas dalam tulisan ini.</p>\n<p>Tulisan ini memiliki tujuan agar para pembaca dapat mengerti bagaimana cara mendesign dan merancang algoritma yang baik, serta dapat menganalisa algoritma yang kelak para pembaca kembangkan sehingga menghasilkan program yang baik. Serta dapat memberikan dasar untuk mengambil keputusan serta solusi-solusi kepada para pembaca dalam memilih serta merancang algoritma yang tepat.</p>\n<h2>Algoritma</h2>\n<p>Tentu sebagai programmer ataupun orang yang berkecimpung dalam dunia ilmu komputer, kita sering mendengar kata algoritma, tentu sebelum  merancang dan mengembangkan kita terlebih tau harus mengerti apa itu <em>algoritma</em>.</p>\n<blockquote>\n<p>algoritma merupakan prosedur atau langkah-langkah yang logic untuk memecahkan atau menyelesaikan masalah.</p>\n</blockquote>\n<p>Dalam mendefinisikan sebuah algoritma tentu kita memerlukan serta menggarisbawahi beberapa hal agar algoritma yang kita buat sesuai. Umumnya dalam mendesain suatu algoritma kita memerluka 3 hal berikut sebagai dasarnya, yaitu :\n</p>\n<ol>\n<li>\n<p>Masalah </p>\n<blockquote>\n<p>tentu merancang algoritma bertujuan untuk menyelesaikan masalah.</p>\n</blockquote>\n</li>\n<li>\n<p>Input</p>\n<blockquote>\n<p>Kondisi keadan atau data masukan sesuai dengan permasalahan</p>\n</blockquote>\n</li>\n<li>\n<p>Output</p>\n<blockquote>\n<p>kondisi akhir atau keluaran algoritma yang diharapkan menjadi solusi dari permasalah yang ada.</p>\n</blockquote>\n</li>\n</ol>\n<h2>Contoh algoritma</h2>\n<ul>\n<li>\n<p>Masalah</p>\n<blockquote>\n<p>Menemukan total nilai dari n deret list</p>\n</blockquote>\n</li>\n<li>\n<p>Input</p>\n<blockquote>\n<p>total n deret list</p>\n</blockquote>\n</li>\n<li>\n<p>Output</p>\n<blockquote>\n<p>total nilai keseluruhan </p>\n</blockquote>\n</li>\n</ul>\n<p>maka pertama-tama kita akan membuat pembuktiannya dalam program dengan bahasa python.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">totalderet1</span><span class=\"token punctuation\">(</span>sizeList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    total<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>sizeList<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        total<span class=\"token operator\">+=</span>value\n    <span class=\"token keyword\">return</span> total\n\nsize<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'total </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>size<span class=\"token punctuation\">}</span></span><span class=\"token string\"> bilangan adalah </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>totalderet1<span class=\"token punctuation\">{</span>size<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># menghasilkan 55</span></code></pre></div>\n<p>dalam contoh program diatas, kita tahu bahwa total 10 deret bilangan dimulai dari 1 sampai 10 adalah 55, bagaiman dengan fungsi berikut ini, </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">totalderet2</span><span class=\"token punctuation\">(</span>sizeData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>sizeData<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>sizeData<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n\nsize<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'total </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>size<span class=\"token punctuation\">}</span></span><span class=\"token string\"> bilangan adalah </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>totalderet2<span class=\"token punctuation\">{</span>size<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># menghasilkan 55</span></code></pre></div>\n<p>fungsi <strong>totalderet2</strong> juga akan menghasilkan nilai 55 untuk 10 deret bilangan 1-10, namun yang jadi pertanyaan bagaimana dengan performancenya  ???</p>\n<p>kita bisa membandingkan dengan timeit, </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number<span class=\"token operator\">=</span><span class=\"token number\">1000</span>\ntime1 <span class=\"token operator\">=</span> timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token string\">\"totalderet1(size)\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">globals</span><span class=\"token operator\">=</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>number<span class=\"token operator\">=</span>number<span class=\"token punctuation\">)</span>\ntime2 <span class=\"token operator\">=</span> timeit<span class=\"token punctuation\">.</span>timeit<span class=\"token punctuation\">(</span><span class=\"token string\">\"totalderet2(size)\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">globals</span><span class=\"token operator\">=</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>number<span class=\"token operator\">=</span>number<span class=\"token punctuation\">)</span></code></pre></div>\n<p>dari hasil benchmark , didapatkan hasil sebagai berikut,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">total 10 bilangan adalah dengan loop 55\ntotal 10 bilangan adalah dengan fungsi matematika 55.0\ntimer dengan looop 0.00074\n<span class=\"token function\">time</span> dengan math 0.00018</code></pre></div>\n<p>sama-sama menghasilka nilai 55, namun memiliki waktu eksekusi yang berbeda, tentu ini menjadi tanda tanya bagi kita semua, mengapa hal demikian dapat terjadi.</p>\n<p>Dengan melihat sekilas fungsi diatas kita tahu bahwa menyusun suatu algoritma tidak boleh sembarang, algoritma yang baik adalah algoritma yang dengan benar mengolah masukan menjadi keluaran yang diharapkan, yang menyelesaikan suatu permasalah, mudah diimplementasikan serta efisien dalam menggunakan resource memory terlepas dari bahasa pemrograman yang digunakan.</p>\n<p>untuk bahasan selanjutnya, kita akan membahas mengenai notasi asimtotik BigO.</p>","fields":{"slug":"/Analisis-Algoritme/","prefix":"2018-12-17"},"frontmatter":{"title":"Analisis Algoritma","author":"Yunindyo Prabowo","category":"strategi algoritma"}},"authornote":{"id":"424eb42b-228f-546b-91e5-592453c0efaf","html":"<p>Programmer from Indonesia, Dark World enthusiast especially coffee and terminals,\nhave a dream to be a pythonist</p>"},"site":{"siteMetadata":{"facebook":{"appId":"236272456926570"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Analisis-Algoritme/","prev":{"id":"aa05268d-051a-58fe-ac2e-71390ad5f1ef","fields":{"slug":"/Dasar-Flask-Framework-Bagian-Ketiga/","prefix":"2017-06-10","source":"posts"},"frontmatter":{"title":"Tutorial Dasar Flask Framework (ke-tiga)","category":"flask tutorial dasar"}},"next":{"id":"540568be-bb9d-57ed-9b23-78a58025c062","fields":{"slug":"/Linux-First-Install/","prefix":"2019-01-04","source":"posts"},"frontmatter":{"title":"Power Management Linux","category":"linux"}},"source":"posts"}}}