{"version":3,"file":"component---src-templates-category-template-js-d0aab7796f3f4682e7dc.js","mappings":"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","sources":["webpack://ypraw-blog-code-base/./src/components/Article/Headline.js","webpack://ypraw-blog-code-base/./src/components/Article/Article.js","webpack://ypraw-blog-code-base/./src/components/List/List.js","webpack://ypraw-blog-code-base/./src/templates/CategoryTemplate.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _JSXStyle from \"styled-jsx/style\";\nconst Headline = (props) => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          color: ${theme.color.brand.primary};\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            color: ${theme.color.neutral.white};\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _JSXStyle from \"styled-jsx/style\";\nconst Article = (props) => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        :global(h2) {\n          color: ${theme.color.neutral.white};\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport _JSXStyle from \"styled-jsx/style\";\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n          color: ${theme.color.neutral.white};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport _JSXStyle from \"styled-jsx/style\";\nconst CategoryTemplate = (props) => {\n  const {\n    pageContext: { category },\n    data: {\n      allMarkdownRemark: { totalCount, edges }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {(theme) => (\n          <Article theme={theme}>\n            <header>\n              <Headline theme={theme}>\n                <span>Posts in category</span> <FaTag />\n                {category}\n              </Headline>\n              <p className=\"meta\">\n                There {totalCount > 1 ? \"are\" : \"is\"} <strong>{totalCount}</strong> post\n                {totalCount > 1 ? \"s\" : \"\"} in the category.\n              </p>\n              <List edges={edges} theme={theme} />\n            </header>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n      <Seo />\n      <style jsx>{`\n        p {\n          color: #fff;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default CategoryTemplate;\n\n// eslint-disable-next-line no-undef\nexport const categoryQuery = graphql`\n  query PostsByCategory($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { category: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","title","children","theme","font","size","xxl","space","stack","l","color","brand","primary","time","duration","long","weight","standard","neutral","white","xs","xl","inset","default","text","maxWidth","tablet","desktop","edges","m","s","lineHeight","map","edge","node","frontmatter","slug","fields","key","Link","to","category","pageContext","data","allMarkdownRemark","totalCount","ThemeContext"],"sourceRoot":""}