{"version":3,"sources":["../src/Status.jsx"],"names":["getLoginStatus","api","response","status","Status","loading","setState","render","children","props","state","handleReady","handleStatusChange","Component"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA,SAAeA,cAAf,CAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACyBA,GAAG,CAACD,cAAJ,EADzB;;AAAA;AACQE,UAAAA,QADR;AAAA,2CAGSA,QAAQ,CAACC,MAHlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;IAeqBC,M;;;;;;;;;;;;;wFACJ;AACbC,MAAAA,OAAO,EAAE;AADI,K;8FAID,iBAAOJ,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEID,cAAc,CAACC,GAAD,CAFlB;;AAAA;AAAA;AAAA;AAEVE,gBAAAA,MAFU;AAGVE,gBAAAA,OAHU,EAGD;AAHC;;AAAA,2BACPC,QADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;qGAOO,UAACJ,QAAD,EAA4B;AAC/C,YAAKI,QAAL,CAAc;AACZH,QAAAA,MAAM,EAAED,QAAQ,CAACC,MADL;AAEZE,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,K;;;;;;SAEDE,M,GAAA,kBAAS;AAAA,QACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAAA,sBAEqB,KAAKE,KAF1B;AAAA,QAECP,MAFD,eAECA,MAFD;AAAA,QAESE,OAFT,eAESA,OAFT;AAIP,WACE,6BAAC,mBAAD;AAAY,MAAA,OAAO,EAAE,KAAKM;AAA1B,OACE,6BAAC,kBAAD;AAAW,MAAA,KAAK,EAAC,mBAAjB;AAAqC,MAAA,QAAQ,EAAE,KAAKC;AAApD,OACGJ,QAAQ,CAAC;AACRL,MAAAA,MAAM,EAANA,MADQ;AAERE,MAAAA,OAAO,EAAPA;AAFQ,KAAD,CADX,CADF,CADF;AAUD,G;;;EAjCiCQ,gB","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport Initialize from './Initialize';\nimport Subscribe from './Subscribe';\n\nasync function getLoginStatus(api: Object): Promise<string> {\n  const response = await api.getLoginStatus();\n\n  return response.status;\n}\n\ntype Props = {\n  children: Function,\n};\n\ntype State = {\n  loading: Boolean,\n  status?: undefined,\n};\n\nexport default class Status extends Component<Props, State> {\n  state: State = {\n    loading: true,\n  };\n\n  handleReady = async (api: Object): Promise<void> => {\n    this.setState({\n      status: await getLoginStatus(api),\n      loading: false,\n    });\n  }\n\n  handleStatusChange = (response: Object): void => {\n    this.setState({\n      status: response.status,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { status, loading } = this.state;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\n          {children({\n            status,\n            loading,\n          })}\n        </Subscribe>\n      </Initialize>\n    );\n  }\n}\n"],"file":"Status.js"}