{"version":3,"sources":["../src/Facebook.js"],"names":["log","LoginStatus","CONNECTED","NOT_AUTHORIZED","Method","GET","POST","DELETE","Facebook","options","domain","version","cookie","status","xfbml","language","frictionlessRequests","appId","Error","wait","init","getAppId","loadingPromise","Promise","resolve","window","fbAsyncInit","FB","fjs","document","getElementsByTagName","getElementById","js","createElement","id","async","src","parentNode","insertBefore","process","method","before","after","fb","reject","response","error","ui","api","path","params","login","opts","logout","getLoginStatus","getAuthResponse","getTokenDetail","authResponse","getProfile","getTokenDetailWithProfile","tokenDetail","profile","getToken","accessToken","getUserId","userID","sendInvite","to","postAction","ogNamespace","ogAction","ogObject","ogObjectUrl","noFeedStory","url","encodeURIComponent","getPermissions","data","hasPermissions","permissions","usersPermissions","findedPermissions","filter","p","find","row","permission","length","subscribe","eventName","callback","Event","unsubscribe","parse","XFBML","getRequests","removeRequest","requestID","setAutoGrow","Canvas","paySimple","product","quantity","action","pay"],"mappings":"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","file":"Facebook.js","sourcesContent":["import debug from 'debug';\n\nconst log = debug('react-facebook:facebook');\n\nexport const LoginStatus = {\n  CONNECTED: 'connected',\n  NOT_AUTHORIZED: 'not_authorized',\n};\n\nexport const Method = {\n  GET: 'get',\n  POST: 'post',\n  DELETE: 'delete',\n};\n\nexport default class Facebook {\n  constructor(options = {}) {\n    this.options = {\n      domain: 'connect.facebook.net',\n      version: 'v2.9',\n      cookie: false,\n      status: false,\n      xfbml: false,\n      language: 'en_US',\n      frictionlessRequests: false,\n      ...options,\n    };\n\n    if (!this.options.appId) {\n      throw new Error('You need to set appId');\n    }\n\n    if (!this.options.wait) {\n      this.init();\n    }\n  }\n\n  getAppId() {\n    return this.options.appId;\n  }\n\n  async init() {\n    if (this.loadingPromise) {\n      return this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise((resolve) => {\n      const { options } = this;\n\n      window.fbAsyncInit = () => {\n        window.FB.init({\n          appId: options.appId,\n          version: options.version,\n          cookie: options.cookie,\n          status: options.status,\n          xfbml: options.xfbml,\n          frictionlessRequests: this.frictionlessRequests,\n        });\n\n        resolve(window.FB);\n      };\n\n      const fjs = document.getElementsByTagName('script')[0];\n      if (!fjs) {\n        log('Script tag does not exists in the DOM');\n        return;\n      }\n\n      if (document.getElementById('facebook-jssdk')) {\n        return;\n      }\n\n      const js = document.createElement('script');\n      js.id = 'facebook-jssdk';\n      js.async = true;\n      js.src = `//${options.domain}/${options.language}/sdk.js`;\n\n      fjs.parentNode.insertBefore(js, fjs);\n    });\n\n    return this.loadingPromise;\n  }\n\n  async process(method, before = [], after = []) {\n    const fb = await this.init();\n\n    return new Promise((resolve, reject) => {\n      fb[method](...before, (response) => {\n        if (!response || response.error) {\n          reject(new Error((response && response.error) || 'Response is undefined'));\n          return;\n        }\n\n        resolve(response);\n      }, ...after);\n    });\n  }\n\n  async ui(options) {\n    return this.process('ui', [options]);\n  }\n\n  async api(path, method = Method.GET, params = {}) {\n    return this.process('api', [path, method, params]);\n  }\n\n  async login(opts = null) {\n    return this.process('login', [], [opts]);\n  }\n\n  async logout() {\n    return this.process('logout');\n  }\n\n  async getLoginStatus() {\n    return this.process('getLoginStatus');\n  }\n\n  async getAuthResponse() {\n    return this.process('getAuthResponse');\n  }\n\n  async getTokenDetail() {\n    const response = await this.getLoginStatus();\n    if (response.status === LoginStatus.CONNECTED && response.authResponse) {\n      return response.authResponse;\n    }\n\n    throw new Error('Token is undefined');\n  }\n\n  async getProfile(params) {\n    return this.api('/me', Method.GET, params);\n  }\n\n  async getTokenDetailWithProfile(params) {\n    const tokenDetail = await this.getTokenDetail();\n    const profile = await this.getProfile(params);\n\n    return {\n      profile,\n      tokenDetail,\n    };\n  }\n\n  async getToken() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.accessToken;\n  }\n\n  async getUserId() {\n    const authResponse = await this.getTokenDetail();\n    return authResponse.userID;\n  }\n\n  async sendInvite(to, options) {\n    return this.ui({\n      to,\n      method: 'apprequests',\n      ...options,\n    });\n  }\n\n\n  async postAction(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {\n    let url = `/me/${ogNamespace}:${ogAction}?${ogObject}=${encodeURIComponent(ogObjectUrl)}`;\n\n    if (noFeedStory === true) {\n      url += '&no_feed_story=true';\n    }\n\n    return this.api(url, Method.POST);\n  }\n\n  async getPermissions() {\n    const response = await this.api('/me/permissions');\n    return response.data;\n  }\n\n  async hasPermissions(permissions) {\n    const usersPermissions = await this.getPermissions();\n\n    const findedPermissions = permissions.filter((p) => {\n      return !!usersPermissions.find((row) => {\n        const { permission, status } = row;\n        return status === 'granted' && permission === p;\n      });\n    });\n\n    return findedPermissions.length === permissions.length;\n  }\n\n  async subscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.subscribe(eventName, callback);\n  }\n\n  async unsubscribe(eventName, callback) {\n    const fb = await this.init();\n    fb.Event.unsubscribe(eventName, callback);\n  }\n\n  async parse(parentNode) {\n    const fb = await this.init();\n\n    if (typeof parentNode === 'undefined') {\n      fb.XFBML.parse();\n    } else {\n      fb.XFBML.parse(parentNode);\n    }\n  }\n\n  async getRequests() {\n    return this.api('/me/apprequests');\n  }\n\n  async removeRequest(requestID) {\n    return this.api(requestID, Method.DELETE);\n  }\n\n  async setAutoGrow() {\n    const fb = await this.init();\n    fb.Canvas.setAutoGrow();\n  }\n\n  async paySimple(product, quantity = 1) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      quantity,\n    });\n  }\n\n  async pay(product, options) {\n    return this.ui({\n      method: 'pay',\n      action: 'purchaseitem',\n      product,\n      ...options,\n    });\n  }\n}\n\n/*\n  sendToFriends: function(options, callback) {\n    if(!options) {\n      options = {};\n    }\n\n    options.method = 'send';\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        method: 'stream.publish',\n        message: message,\n        attachment: {\n          name: name,\n          caption: caption,\n          description: description,\n          href: url,\n          media:[{\n            type: 'image',\n            src:  imgUrl,\n            href: url\n          }]\n        },\n        action_links: [{\n          text: 'Code',\n          href: url\n        }],\n        user_prompt_message: message\n      },\n      function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  sendInviteForm: function(options, callback) {\n    if(typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method = options.method || 'apprequests';\n\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  checkPageLike: function(pageID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      fbApi.getUserID(function(err, userID) {\n        if(err) {\n          return callback(err);\n        }\n\n        var fqlQuery = 'SELECT uid FROM page_fan WHERE page_id = ' + pageID + ' and uid =  '+ userID;\n        var query = FB.Data.query(fqlQuery);\n\n        query.wait(function(rows) {\n          if (rows.length === 1 && rows[0].uid === userID) {\n            callback(null, true, query);\n          }\n          else {\n            callback(null, false, query);\n          }\n        });\n      });\n    });\n  },\n\n  sendMessageToFriend: function (friendID, link, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.ui({\n        to: friendID,\n        method: 'send',\n        link: link\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  _prepareUsers: function(data) {\n    var users=[];\n\n    for(var index in data) {\n      var userData=data[index];\n\n      var user = {\n        provider_uid: 'facebook'+'_'+userData.uid,\n        provider: 'facebook',\n        id: userData.uid,\n        name: userData.name,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        status: (userData.status!==null) ? userData.status : null,\n        image: '//graph.facebook.com/'+userData.uid+'/picture?'\n      };\n\n      users.push(user);\n    }\n\n    return users;\n  },\n\n  getUserList: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('fql', { q: 'SELECT uid, name, first_name, last_name, online_presence, status FROM user WHERE uid IN ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name' }, function (response)\n      {\n        var users = fbApi._prepareUsers(response.data);\n        callback(null, users, response);\n      });\n    });\n  },\n\n  postFeed: function(options, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      options.method='feed';\n\n      FB.ui(options, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  createAlbum: function(name, description, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', 'post', {\n        name: name,\n        description: description\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //need publish_stream\n  addImageToAlbum: function(albumID, imageURL, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', 'post', {\n        message: message,\n        url: imageURL\n      }, function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbums: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/albums', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumPhotos: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/photos', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'user_photos'\n  getAlbumCoverPicture: function(albumID, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/'+albumID+'/picture', function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  //'publish_stream'\n  postPhoto: function(photoUrl, message, callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.api('/me/photos', 'post', {\n        message: message,\n        url: photoUrl\n      },function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  },\n\n  getPageInfo: function(callback) {\n    this.afterLoad(function(err, fbApi) {\n      if(err) {\n        return callback(err);\n      }\n\n      FB.Canvas.getPageInfo(function(response) {\n        fbApi._callCallbackByResponse(callback, response);\n      });\n    });\n  }\n*/\n"]}