{"version":3,"sources":["../src/Login.jsx"],"names":["Login","process","facebook","props","scope","fields","returnScopes","rerequest","reauthorize","loginQpts","authType","return_scopes","push","length","auth_type","join","login","response","status","Error","getTokenDetailWithProfile","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;IAUqBA,K;;;;;;;;kBAWbC,O;yGAAQC,Q;;;;;;;uBAGR,KAAKC,K,EADPC,K,UAAAA,K,EAAOC,M,UAAAA,M,EAAQC,Y,UAAAA,Y,EAAcC,S,UAAAA,S,EAAWC,W,UAAAA,W;AAEpCC,uB,GAAY,EAAEL,YAAF,E;AACZM,sB,GAAW,E;;;AAEjB,kBAAIJ,YAAJ,EAAkB;AAChBG,0BAAUE,aAAV,GAA0B,IAA1B;AACD;;AAED,kBAAIJ,SAAJ,EAAe;AACbG,yBAASE,IAAT,CAAc,WAAd;AACD;;AAED,kBAAIJ,WAAJ,EAAiB;AACfE,yBAASE,IAAT,CAAc,gBAAd;AACD;;AAED,kBAAIF,SAASG,MAAb,EAAqB;AACnBJ,0BAAUK,SAAV,GAAsBJ,SAASK,IAAT,CAAc,GAAd,CAAtB;AACD;;;qBAEsBb,SAASc,KAAT,CAAeP,SAAf,C;;;AAAjBQ,sB;;oBACFA,SAASC,MAAT,KAAoB,W;;;;;oBAChB,IAAIC,KAAJ,CAAU,mBAAV,C;;;+CAGDjB,SAASkB,yBAAT,CAAmC,EAAEf,cAAF,EAAnC,C;;;;;;;;;;;;;;;;;;6BAtCFgB,Y,8BACF,kBAAQA,Y;AACXjB,SAAO,E;AACPC,UAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,WAArB,EAAkC,aAAlC,EACN,MADM,EACE,OADF,EACW,QADX,EACqB,QADrB,EAC+B,UAD/B,EAC2C,UAD3C,EACuD,MADvD,C;AAERC,gBAAc,K;AACdC,aAAW,K;AACXC,eAAa;;kBARIR,K","file":"Login.js","sourcesContent":["// @flow\nimport Process from './Process';\n\ntype Props = Process & {\n  scope: string,\n  fields?: string[],\n  returnScopes?: boolean,\n  rerequest?: boolean,\n  reauthorize?: boolean,\n};\n\nexport default class Login extends Process<Props> {\n  static defaultProps = {\n    ...Process.defaultProps,\n    scope: '',\n    fields: ['id', 'first_name', 'last_name', 'middle_name',\n      'name', 'email', 'locale', 'gender', 'timezone', 'verified', 'link'],\n    returnScopes: false,\n    rerequest: false,\n    reauthorize: false,\n  };\n\n  async process(facebook) {\n    const {\n      scope, fields, returnScopes, rerequest, reauthorize,\n    } = this.props;\n    const loginQpts = { scope };\n    const authType = [];\n\n    if (returnScopes) {\n      loginQpts.return_scopes = true;\n    }\n\n    if (rerequest) {\n      authType.push('rerequest');\n    }\n\n    if (reauthorize) {\n      authType.push('reauthenticate');\n    }\n\n    if (authType.length) {\n      loginQpts.auth_type = authType.join(',');\n    }\n\n    const response = await facebook.login(loginQpts);\n    if (response.status !== 'connected') {\n      throw new Error('Unauthorized user');\n    }\n\n    return facebook.getTokenDetailWithProfile({ fields });\n  }\n}\n"]}