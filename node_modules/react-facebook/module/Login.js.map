{"version":3,"sources":["../src/Login.jsx"],"names":["Process","Login","process","facebook","scope","fields","returnScopes","rerequest","reauthorize","props","loginQpts","authType","return_scopes","push","length","auth_type","join","response","login","status","Error","getTokenDetailWithProfile","defaultProps"],"mappings":";;AACA,OAAOA,OAAP,MAAoB,WAApB;;AAUA,eAAe,MAAMC,KAAN,SAAoBD,OAApB,CAAmC;;AAW1CE,SAAN,CAAcC,QAAd,EAAwB;AAAA;;AAAA;AACtB,YAAM;AACJC,aADI,EACGC,MADH,EACWC,YADX,EACyBC,SADzB,EACoCC;AADpC,UAEF,MAAKC,KAFT;AAGA,YAAMC,YAAY,EAAEN,KAAF,EAAlB;AACA,YAAMO,WAAW,EAAjB;;AAEA,UAAIL,YAAJ,EAAkB;AAChBI,kBAAUE,aAAV,GAA0B,IAA1B;AACD;;AAED,UAAIL,SAAJ,EAAe;AACbI,iBAASE,IAAT,CAAc,WAAd;AACD;;AAED,UAAIL,WAAJ,EAAiB;AACfG,iBAASE,IAAT,CAAc,gBAAd;AACD;;AAED,UAAIF,SAASG,MAAb,EAAqB;AACnBJ,kBAAUK,SAAV,GAAsBJ,SAASK,IAAT,CAAc,GAAd,CAAtB;AACD;;AAED,YAAMC,WAAW,MAAMd,SAASe,KAAT,CAAeR,SAAf,CAAvB;AACA,UAAIO,SAASE,MAAT,KAAoB,WAAxB,EAAqC;AACnC,cAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACD;;AAED,aAAOjB,SAASkB,yBAAT,CAAmC,EAAEhB,MAAF,EAAnC,CAAP;AA5BsB;AA6BvB;AAxC+C;AAA7BJ,K,CACZqB,Y,gBACFtB,QAAQsB,Y;AACXlB,SAAO,E;AACPC,UAAQ,CAAC,IAAD,EAAO,YAAP,EAAqB,WAArB,EAAkC,aAAlC,EACN,MADM,EACE,OADF,EACW,QADX,EACqB,QADrB,EAC+B,UAD/B,EAC2C,UAD3C,EACuD,MADvD,C;AAERC,gBAAc,K;AACdC,aAAW,K;AACXC,eAAa","file":"Login.js","sourcesContent":["// @flow\nimport Process from './Process';\n\ntype Props = Process & {\n  scope: string,\n  fields?: string[],\n  returnScopes?: boolean,\n  rerequest?: boolean,\n  reauthorize?: boolean,\n};\n\nexport default class Login extends Process<Props> {\n  static defaultProps = {\n    ...Process.defaultProps,\n    scope: '',\n    fields: ['id', 'first_name', 'last_name', 'middle_name',\n      'name', 'email', 'locale', 'gender', 'timezone', 'verified', 'link'],\n    returnScopes: false,\n    rerequest: false,\n    reauthorize: false,\n  };\n\n  async process(facebook) {\n    const {\n      scope, fields, returnScopes, rerequest, reauthorize,\n    } = this.props;\n    const loginQpts = { scope };\n    const authType = [];\n\n    if (returnScopes) {\n      loginQpts.return_scopes = true;\n    }\n\n    if (rerequest) {\n      authType.push('rerequest');\n    }\n\n    if (reauthorize) {\n      authType.push('reauthenticate');\n    }\n\n    if (authType.length) {\n      loginQpts.auth_type = authType.join(',');\n    }\n\n    const response = await facebook.login(loginQpts);\n    if (response.status !== 'connected') {\n      throw new Error('Unauthorized user');\n    }\n\n    return facebook.getTokenDetailWithProfile({ fields });\n  }\n}\n"]}