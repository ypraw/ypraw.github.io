{"version":3,"sources":["../src/Status.jsx"],"names":["React","Component","Initialize","Subscribe","getLoginStatus","api","response","status","Status","loading","setState","render","children","props","state","handleReady","handleStatusChange"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;SAEeC,c;;;;;sCAAf,WAA8BC,GAA9B,EAA4D;AAC1D,UAAMC,QAAQ,SAASD,GAAG,CAACD,cAAJ,EAAvB;AAEA,WAAOE,QAAQ,CAACC,MAAhB;AACD,G;;;;AAWD,eAAe,MAAMC,MAAN,SAAqBP,SAArB,CAA6C;AAAA;AAAA;;AAAA;AAAA;;AAAA,mCAC3C;AACbQ,MAAAA,OAAO,EAAE;AADI,KAD2C;;AAAA;AAAA;AAAA;AAAA,mCAK5C,WAAOJ,GAAP,EAAsC;AAClD,QAAA,KAAI,CAACK,QAAL,CAAc;AACZH,UAAAA,MAAM,QAAQH,cAAc,CAACC,GAAD,CADhB;AAEZI,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAVyD;;AAAA;AAAA;AAAA;AAAA;;AAAA,gDAYpCH,QAAD,IAA4B;AAC/C,WAAKI,QAAL,CAAc;AACZH,QAAAA,MAAM,EAAED,QAAQ,CAACC,MADL;AAEZE,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAjByD;AAAA;;AAmB1DE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEN,MAAAA,MAAF;AAAUE,MAAAA;AAAV,QAAsB,KAAKK,KAAjC;AAEA,WACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKC;AAA1B,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,mBAAjB;AAAqC,MAAA,QAAQ,EAAE,KAAKC;AAApD,OACGJ,QAAQ,CAAC;AACRL,MAAAA,MADQ;AAERE,MAAAA;AAFQ,KAAD,CADX,CADF,CADF;AAUD;;AAjCyD","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport Initialize from './Initialize';\nimport Subscribe from './Subscribe';\n\nasync function getLoginStatus(api: Object): Promise<string> {\n  const response = await api.getLoginStatus();\n\n  return response.status;\n}\n\ntype Props = {\n  children: Function,\n};\n\ntype State = {\n  loading: Boolean,\n  status?: undefined,\n};\n\nexport default class Status extends Component<Props, State> {\n  state: State = {\n    loading: true,\n  };\n\n  handleReady = async (api: Object): Promise<void> => {\n    this.setState({\n      status: await getLoginStatus(api),\n      loading: false,\n    });\n  }\n\n  handleStatusChange = (response: Object): void => {\n    this.setState({\n      status: response.status,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { status, loading } = this.state;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        <Subscribe event=\"auth.statusChange\" onChange={this.handleStatusChange}>\n          {children({\n            status,\n            loading,\n          })}\n        </Subscribe>\n      </Initialize>\n    );\n  }\n}\n"],"file":"Status.js"}