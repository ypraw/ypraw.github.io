{"version":3,"sources":["../src/Subscribe.jsx"],"names":["React","Component","Initialize","LoginStatus","api","event","props","setState","subscribe","handleChange","args","onChange","componentWillUnmount","state","unsubscribe","render","children","handleReady","undefined"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAYA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAkD;AAAA;AAAA;;AAAA;AAAA;;AAAA,mCAKhD,EALgD;;AAAA;AAAA;AAAA;AAAA,mCAcjD,WAAOG,GAAP,EAAsC;AAClD,cAAM;AAAEC,UAAAA;AAAF,YAAY,KAAI,CAACC,KAAvB;;AAEA,QAAA,KAAI,CAACC,QAAL,CAAc;AACZH,UAAAA;AADY,SAAd;;AAIA,cAAMA,GAAG,CAACI,SAAJ,CAAcH,KAAd,EAAqB,KAAI,CAACI,YAA1B,CAAN;AACD,OAtB8D;;AAAA;AAAA;AAAA;AAAA;;AAAA,0CAwBhD,CAAC,GAAGC,IAAJ,KAAmB;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKL,KAA1B;;AAEA,UAAIK,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAC,GAAGD,IAAJ,CAAR;AACD;AACF,KA9B8D;AAAA;;AAO/DE,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAET,QAAAA;AAAF,OAAT;AAAkBE,MAAAA,KAAK,EAAE;AAAED,QAAAA;AAAF;AAAzB,QAAuC,IAA7C;;AACA,QAAID,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACU,WAAJ,CAAgBT,KAAhB,EAAuB,KAAKI,YAA5B;AACD;AACF;;AAoBDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKV,KAA1B;AAEA,WACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKW;AAA1B,OACGD,QADH,CADF;AAKD;;AAxC8D;;gBAA5Cb,W,kBACG;AACpBQ,EAAAA,QAAQ,EAAEO;AADU,C","sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport Initialize from './Initialize';\n\ntype Props = {\n  children: Node,\n  onChange?: Function,\n  event: string,\n};\n\ntype State = {\n  api?: Object,\n};\n\nexport default class LoginStatus extends Component<Props, State> {\n  static defaultProps = {\n    onChange: undefined,\n  };\n\n  state: State = {};\n\n  componentWillUnmount() {\n    const { state: { api }, props: { event } } = this;\n    if (api) {\n      api.unsubscribe(event, this.handleChange);\n    }\n  }\n\n  handleReady = async (api: Object): Promise<void> => {\n    const { event } = this.props;\n\n    this.setState({\n      api,\n    });\n\n    await api.subscribe(event, this.handleChange);\n  }\n\n  handleChange = (...args): void => {\n    const { onChange } = this.props;\n\n    if (onChange) {\n      onChange(...args);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Initialize onReady={this.handleReady}>\n        {children}\n      </Initialize>\n    );\n  }\n}\n"],"file":"Subscribe.js"}