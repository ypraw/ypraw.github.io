let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/src/babel-webpack-plugin
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +20 ~/.vim/init.vim
badd +168 .eslintrc.yml
badd +1 index.js
badd +31 package.json
badd +26 .travis.yml
badd +26 test/test.js
badd +0 README.md
badd +0 LICENSE
badd +1 LICENSE.md
argglobal
silent! argdel *
argadd index.js
edit README.md
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
5wincmd k
wincmd w
wincmd w
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 31 + 115) / 231)
exe '2resize ' . ((&lines * 45 + 32) / 64)
exe 'vert 2resize ' . ((&columns * 199 + 115) / 231)
exe '3resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 3resize ' . ((&columns * 199 + 115) / 231)
exe '4resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 4resize ' . ((&columns * 199 + 115) / 231)
exe '5resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 5resize ' . ((&columns * 199 + 115) / 231)
exe '6resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 6resize ' . ((&columns * 199 + 115) / 231)
exe '7resize ' . ((&lines * 7 + 32) / 64)
exe 'vert 7resize ' . ((&columns * 199 + 115) / 231)
argglobal
enew
file NERD_tree_1
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 11 - ((10 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
11
normal! 0
wincmd w
argglobal
edit index.js
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
edit .eslintrc.yml
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 232 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
232
normal! 011|
wincmd w
argglobal
edit test/test.js
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 0
wincmd w
argglobal
edit .travis.yml
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 05|
wincmd w
argglobal
edit package.json
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 2 - ((1 * winheight(0) + 3) / 7)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 06|
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 31 + 115) / 231)
exe '2resize ' . ((&lines * 45 + 32) / 64)
exe 'vert 2resize ' . ((&columns * 199 + 115) / 231)
exe '3resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 3resize ' . ((&columns * 199 + 115) / 231)
exe '4resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 4resize ' . ((&columns * 199 + 115) / 231)
exe '5resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 5resize ' . ((&columns * 199 + 115) / 231)
exe '6resize ' . ((&lines * 1 + 32) / 64)
exe 'vert 6resize ' . ((&columns * 199 + 115) / 231)
exe '7resize ' . ((&lines * 7 + 32) / 64)
exe 'vert 7resize ' . ((&columns * 199 + 115) / 231)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
