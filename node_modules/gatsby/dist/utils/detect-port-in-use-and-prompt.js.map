{"version":3,"sources":["../../src/utils/detect-port-in-use-and-prompt.js"],"names":["require","promisify","detectPort","report","readlinePort","port","rlInterface","question","Promise","resolve","answer","length","match","detectPortInUseAndPrompt","foundPort","detectedPort","catch","err","panic","module","exports"],"mappings":";;;;;;iBAAsBA,OAAO,CAAE,MAAF,C;MAArBC,S,YAAAA,S;;AACR,MAAMC,UAAU,GAAGD,SAAS,CAACD,OAAO,CAAE,aAAF,CAAR,CAA5B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAE,yBAAF,CAAtB;;AAEA,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAC1C,QAAMC,QAAQ,GAAI,wCAAuCF,IAAK,kEAA9D;AACA,SAAO,IAAIG,OAAJ,CAAYC,OAAO,IAAI;AAC5BH,IAAAA,WAAW,CAACC,QAAZ,CAAqBA,QAArB,EAA+BG,MAAM,IAAI;AACvCD,MAAAA,OAAO,CAACC,MAAM,CAACC,MAAP,KAAkB,CAAlB,IAAuBD,MAAM,CAACE,KAAP,CAAa,UAAb,CAAxB,CAAP;AACD,KAFD;AAGD,GAJM,CAAP;AAKD,CAPD;;AASA,MAAMC,wBAAwB;AAAA;AAAA;AAAA,6CAAG,WAAOR,IAAP,EAAaC,WAAb,EAA6B;AAC5D,QAAIQ,SAAS,GAAGT,IAAhB;AACA,UAAMU,YAAY,SAASb,UAAU,CAACG,IAAD,CAAV,CAAiBW,KAAjB,CAAuBC,GAAG,IAAId,MAAM,CAACe,KAAP,CAAaD,GAAb,CAA9B,CAA3B;;AACA,QAAIZ,IAAI,KAAKU,YAAb,EAA2B;AACzB,gBAAUX,YAAY,CAACC,IAAD,EAAOC,WAAP,CAAtB,EAA2C;AACzCQ,QAAAA,SAAS,GAAGC,YAAZ;AACD;AACF;;AACD,WAAOD,SAAP;AACD,GAT6B;;AAAA,kBAAxBD,wBAAwB;AAAA;AAAA;AAAA,GAA9B;;AAWAM,MAAM,CAACC,OAAP,GAAiBP,wBAAjB","sourcesContent":["const { promisify } = require(`util`)\nconst detectPort = promisify(require(`detect-port`))\nconst report = require(`gatsby-cli/lib/reporter`)\n\nconst readlinePort = (port, rlInterface) => {\n  const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n  return new Promise(resolve => {\n    rlInterface.question(question, answer => {\n      resolve(answer.length === 0 || answer.match(/^yes|y$/i))\n    })\n  })\n}\n\nconst detectPortInUseAndPrompt = async (port, rlInterface) => {\n  let foundPort = port\n  const detectedPort = await detectPort(port).catch(err => report.panic(err))\n  if (port !== detectedPort) {\n    if (await readlinePort(port, rlInterface)) {\n      foundPort = detectedPort\n    }\n  }\n  return foundPort\n}\n\nmodule.exports = detectPortInUseAndPrompt\n"],"file":"detect-port-in-use-and-prompt.js"}