{"version":3,"sources":["../../src/commands/build-html.js"],"names":["Promise","require","webpack","fs","convertHrtime","chunk","webpackConfig","createErrorFromString","telemetry","runWebpack","compilerConfig","resolve","reject","run","err","stats","doBuildRenderer","program","directory","outputFile","hasErrors","webpackErrors","toJson","errors","filter","Boolean","error","length","Error","toString","buildRenderer","stage","config","deleteRenderer","rendererPath","remove","e","renderHTMLQueue","workerPool","activity","htmlComponentRendererPath","pages","envVars","Object","entries","NODE_ENV","process","env","gatsby_executing_command","gatsby_log_level","start","hrtime","segments","finished","map","pageSegment","renderHTML","paths","then","setStatus","seconds","toFixed","catch","doBuildPages","pagePaths","decorateEvent","siteMeasurements","pagesCount","prettyError","stack","context","buildPages","module","exports"],"mappings":";;;;;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAE,UAAF,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAE,SAAF,CAAvB;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAE,gBAAF,CAA7B;;iBACkBA,OAAO,CAAE,QAAF,C;MAAjBI,K,YAAAA,K;;AACR,MAAMC,aAAa,GAAGL,OAAO,CAAE,yBAAF,CAA7B;;kBACkCA,OAAO,CAAE,gCAAF,C;MAAjCM,qB,aAAAA,qB;;AACR,MAAMC,SAAS,GAAGP,OAAO,CAAE,kBAAF,CAAzB;;AAEA,MAAMQ,UAAU,GAAGC,cAAc,IAC/B,IAAIV,OAAJ,CAAY,CAACW,OAAD,EAAUC,MAAV,KAAqB;AAC/BV,EAAAA,OAAO,CAACQ,cAAD,CAAP,CAAwBG,GAAxB,CAA4B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1C,QAAID,GAAJ,EAAS;AACPF,MAAAA,MAAM,CAACE,GAAD,CAAN;AACD,KAFD,MAEO;AACLH,MAAAA,OAAO,CAACI,KAAD,CAAP;AACD;AACF,GAND;AAOD,CARD,CADF;;AAWA,MAAMC,eAAe;AAAA;AAAA;AAAA,6CAAG,WAAOC,OAAP,EAAgBX,aAAhB,EAAkC;AAAA,UAChDY,SADgD,GAClCD,OADkC,CAChDC,SADgD;AAExD,UAAMH,KAAK,SAASN,UAAU,CAACH,aAAD,CAA9B,CAFwD,CAGxD;;AACA,UAAMa,UAAU,GAAI,GAAED,SAAU,wBAAhC;;AACA,QAAIH,KAAK,CAACK,SAAN,EAAJ,EAAuB;AACrB,UAAIC,aAAa,GAAGN,KAAK,CAACO,MAAN,GAAeC,MAAf,CAAsBC,MAAtB,CAA6BC,OAA7B,CAApB;AACA,YAAMC,KAAK,GAAGL,aAAa,CAACM,MAAd,GACVpB,qBAAqB,CAACc,aAAa,CAAC,CAAD,CAAd,EAAoB,GAAEF,UAAW,MAAjC,CADX,GAEV,IAAIS,KAAJ,CACG,8CAAD,GACG,OAAMb,KAAK,CAACc,QAAN,EAAiB,EAF5B,CAFJ;AAMA,YAAMH,KAAN;AACD;;AACD,WAAOP,UAAP;AACD,GAhBoB;;AAAA,kBAAfH,eAAe;AAAA;AAAA;AAAA,GAArB;;AAkBA,MAAMc,aAAa;AAAA;AAAA;AAAA,8CAAG,WAAOb,OAAP,EAAgBc,KAAhB,EAA0B;AAAA,UACtCb,SADsC,GACxBD,OADwB,CACtCC,SADsC;AAE9C,UAAMc,MAAM,SAAS1B,aAAa,CAACW,OAAD,EAAUC,SAAV,EAAqBa,KAArB,EAA4B,IAA5B,CAAlC;AACA,iBAAaf,eAAe,CAACC,OAAD,EAAUe,MAAV,CAA5B;AACD,GAJkB;;AAAA,kBAAbF,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAMA,MAAMG,cAAc;AAAA;AAAA;AAAA,8CAAG,WAAMC,YAAN,EAAsB;AAC3C,QAAI;AACF,YAAM/B,EAAE,CAACgC,MAAH,CAAUD,YAAV,CAAN;AACA,YAAM/B,EAAE,CAACgC,MAAH,CAAW,GAAED,YAAa,MAA1B,CAAN;AACD,KAHD,CAGE,OAAOE,CAAP,EAAU,CACV;AACD;AACF,GAPmB;;AAAA,kBAAdH,cAAc;AAAA;AAAA;AAAA,GAApB;;AASA,MAAMI,eAAe,GAAG,CACtB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CADsB,EAEtBC,yBAFsB,EAGtBC,KAHsB,KAKtB,IAAIzC,OAAJ,CAAY,CAACW,OAAD,EAAUC,MAAV,KAAqB;AAC/B;AACA;AACA,QAAM8B,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAe;AAC7BC,IAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYF,QADO;AAE7BG,IAAAA,wBAAwB,EAAEF,OAAO,CAACC,GAAR,CAAYC,wBAFT;AAG7BC,IAAAA,gBAAgB,EAAEH,OAAO,CAACC,GAAR,CAAYE;AAHD,GAAf,CAAhB;AAMA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,MAAR,EAAd;AACA,QAAMC,QAAQ,GAAG/C,KAAK,CAACoC,KAAD,EAAQ,EAAR,CAAtB;AACA,MAAIY,QAAQ,GAAG,CAAf;AAEArD,EAAAA,OAAO,CAACsD,GAAR,CACEF,QADF,EAEEG,WAAW,IACT,IAAIvD,OAAJ,CAAY,CAACW,OAAD,EAAUC,MAAV,KAAqB;AAC/B0B,IAAAA,UAAU,CACPkB,UADH,CACc;AACVhB,MAAAA,yBADU;AAEViB,MAAAA,KAAK,EAAEF,WAFG;AAGVb,MAAAA;AAHU,KADd,EAMGgB,IANH,CAMQ,MAAM;AACVL,MAAAA,QAAQ,IAAIE,WAAW,CAAC5B,MAAxB;;AACA,UAAIY,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACoB,SAAT,CACG,GAAEN,QAAS,IAAGZ,KAAK,CAACd,MAAO,IAAG,CAC7B0B,QAAQ,GAAGjD,aAAa,CAAC0C,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAD,CAAb,CAAqCU,OADnB,EAE7BC,OAF6B,CAErB,CAFqB,CAElB,eAHf;AAKD;;AACDlD,MAAAA,OAAO;AACR,KAhBH,EAiBGmD,KAjBH,CAiBSlD,MAjBT;AAkBD,GAnBD,CAHJ,EAwBG8C,IAxBH,CAwBQ/C,OAxBR,EAyBGmD,KAzBH,CAyBSlD,MAzBT;AA0BD,CAvCD,CALF;;AA8CA,MAAMmD,YAAY;AAAA;AAAA;AAAA,8CAAG,WAAO;AAC1B7B,IAAAA,YAD0B;AAE1B8B,IAAAA,SAF0B;AAG1BzB,IAAAA,QAH0B;AAI1BD,IAAAA;AAJ0B,GAAP,EAKf;AACJ9B,IAAAA,SAAS,CAACyD,aAAV,CAAyB,WAAzB,EAAqC;AACnCC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,UAAU,EAAEH,SAAS,CAACrC;AAAxB;AADiB,KAArC;;AAIA,QAAI;AACF,YAAMU,eAAe,CAAC;AAAEC,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAD,EAA2BL,YAA3B,EAAyC8B,SAAzC,CAArB;AACD,KAFD,CAEE,OAAO5B,CAAP,EAAU;AACV,YAAMgC,WAAW,GAAG7D,qBAAqB,CAAC6B,CAAC,CAACiC,KAAH,EAAW,GAAEnC,YAAa,MAA1B,CAAzC;AACAkC,MAAAA,WAAW,CAACE,OAAZ,GAAsBlC,CAAC,CAACkC,OAAxB;AACA,YAAMF,WAAN;AACD;AACF,GAjBiB;;AAAA,kBAAZL,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAmBA,MAAMQ,UAAU;AAAA;AAAA;AAAA,8CAAG,WAAO;AACxBtD,IAAAA,OADwB;AAExBc,IAAAA,KAFwB;AAGxBiC,IAAAA,SAHwB;AAIxBzB,IAAAA,QAJwB;AAKxBD,IAAAA;AALwB,GAAP,EAMb;AACJ,UAAMJ,YAAY,SAASJ,aAAa,CAACb,OAAD,EAAUc,KAAV,CAAxC;AACA,UAAMgC,YAAY,CAAC;AAAE7B,MAAAA,YAAF;AAAgB8B,MAAAA,SAAhB;AAA2BzB,MAAAA,QAA3B;AAAqCD,MAAAA;AAArC,KAAD,CAAlB;AACA,UAAML,cAAc,CAACC,YAAD,CAApB;AACD,GAVe;;AAAA,kBAAVqC,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAYAC,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA;AADe,CAAjB","sourcesContent":["/* @flow */\nconst Promise = require(`bluebird`)\nconst webpack = require(`webpack`)\nconst fs = require(`fs-extra`)\nconst convertHrtime = require(`convert-hrtime`)\nconst { chunk } = require(`lodash`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst runWebpack = compilerConfig =>\n  new Promise((resolve, reject) => {\n    webpack(compilerConfig).run((err, stats) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(stats)\n      }\n    })\n  })\n\nconst doBuildRenderer = async (program, webpackConfig) => {\n  const { directory } = program\n  const stats = await runWebpack(webpackConfig)\n  // render-page.js is hard coded in webpack.config\n  const outputFile = `${directory}/public/render-page.js`\n  if (stats.hasErrors()) {\n    let webpackErrors = stats.toJson().errors.filter(Boolean)\n    const error = webpackErrors.length\n      ? createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n      : new Error(\n          `There was an issue while building the site: ` +\n            `\\n\\n${stats.toString()}`\n        )\n    throw error\n  }\n  return outputFile\n}\n\nconst buildRenderer = async (program, stage) => {\n  const { directory } = program\n  const config = await webpackConfig(program, directory, stage, null)\n  return await doBuildRenderer(program, config)\n}\n\nconst deleteRenderer = async rendererPath => {\n  try {\n    await fs.remove(rendererPath)\n    await fs.remove(`${rendererPath}.map`)\n  } catch (e) {\n    // This function will fail on Windows with no further consequences.\n  }\n}\n\nconst renderHTMLQueue = (\n  { workerPool, activity },\n  htmlComponentRendererPath,\n  pages\n) =>\n  new Promise((resolve, reject) => {\n    // We need to only pass env vars that are set programmatically in gatsby-cli\n    // to child process. Other vars will be picked up from environment.\n    const envVars = Object.entries({\n      NODE_ENV: process.env.NODE_ENV,\n      gatsby_executing_command: process.env.gatsby_executing_command,\n      gatsby_log_level: process.env.gatsby_log_level,\n    })\n\n    const start = process.hrtime()\n    const segments = chunk(pages, 50)\n    let finished = 0\n\n    Promise.map(\n      segments,\n      pageSegment =>\n        new Promise((resolve, reject) => {\n          workerPool\n            .renderHTML({\n              htmlComponentRendererPath,\n              paths: pageSegment,\n              envVars,\n            })\n            .then(() => {\n              finished += pageSegment.length\n              if (activity) {\n                activity.setStatus(\n                  `${finished}/${pages.length} ${(\n                    finished / convertHrtime(process.hrtime(start)).seconds\n                  ).toFixed(2)} pages/second`\n                )\n              }\n              resolve()\n            })\n            .catch(reject)\n        })\n    )\n      .then(resolve)\n      .catch(reject)\n  })\n\nconst doBuildPages = async ({\n  rendererPath,\n  pagePaths,\n  activity,\n  workerPool,\n}) => {\n  telemetry.decorateEvent(`BUILD_END`, {\n    siteMeasurements: { pagesCount: pagePaths.length },\n  })\n\n  try {\n    await renderHTMLQueue({ workerPool, activity }, rendererPath, pagePaths)\n  } catch (e) {\n    const prettyError = createErrorFromString(e.stack, `${rendererPath}.map`)\n    prettyError.context = e.context\n    throw prettyError\n  }\n}\n\nconst buildPages = async ({\n  program,\n  stage,\n  pagePaths,\n  activity,\n  workerPool,\n}) => {\n  const rendererPath = await buildRenderer(program, stage)\n  await doBuildPages({ rendererPath, pagePaths, activity, workerPool })\n  await deleteRenderer(rendererPath)\n}\n\nmodule.exports = {\n  buildPages,\n}\n"],"file":"build-html.js"}