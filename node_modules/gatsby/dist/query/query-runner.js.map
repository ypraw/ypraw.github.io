{"version":3,"sources":["../../src/query/query-runner.js"],"names":["fs","require","report","path","store","withResolverContext","formatErrorDetails","boundActionCreators","pageDataUtil","resultHashes","module","exports","queryJob","getState","schema","program","webpackCompilationHash","graphql","query","context","result","errors","errorDetails","Map","set","isPage","JSON","stringify","pluginCreatorId","panicOnBuild","componentPath","Object","assign","pageContext","internalComponentName","component","componentChunkName","updatedAt","pluginCreator___NODE","resultJSON","resultHash","createHash","update","digest","id","publicDir","join","directory","pages","page","get","write","resultPath","hash","outputFile","pageQueryRun"],"mappings":"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","sourcesContent":["// @flow\n\nimport { graphql as graphqlFunction } from \"graphql\"\nconst fs = require(`fs-extra`)\nconst report = require(`gatsby-cli/lib/reporter`)\n\nconst path = require(`path`)\nconst { store } = require(`../redux`)\nconst withResolverContext = require(`../schema/context`)\nconst { formatErrorDetails } = require(`./utils`)\nconst { boundActionCreators } = require(`../redux/actions`)\nconst pageDataUtil = require(`../utils/page-data`)\n\nconst resultHashes = {}\n\ntype QueryJob = {\n  id: string,\n  hash?: string,\n  query: string,\n  componentPath: string,\n  context: Object,\n  isPage: Boolean,\n}\n\n// Run query\nmodule.exports = async (queryJob: QueryJob) => {\n  const { schema, program, webpackCompilationHash } = store.getState()\n\n  const graphql = (query, context) =>\n    graphqlFunction(\n      schema,\n      query,\n      context,\n      withResolverContext(context, schema),\n      context\n    )\n\n  // Run query\n  let result\n  // Nothing to do if the query doesn't exist.\n  if (!queryJob.query || queryJob.query === ``) {\n    result = {}\n  } else {\n    result = await graphql(queryJob.query, queryJob.context)\n  }\n\n  // If there's a graphql error then log the error. If we're building, also\n  // quit.\n  if (result && result.errors) {\n    const errorDetails = new Map()\n    errorDetails.set(`Errors`, result.errors || [])\n    if (queryJob.isPage) {\n      errorDetails.set(`URL path`, queryJob.context.path)\n      errorDetails.set(\n        `Context`,\n        JSON.stringify(queryJob.context.context, null, 2)\n      )\n    }\n    errorDetails.set(`Plugin`, queryJob.pluginCreatorId || `none`)\n    errorDetails.set(`Query`, queryJob.query)\n\n    report.panicOnBuild(`\nThe GraphQL query from ${queryJob.componentPath} failed.\n\n${formatErrorDetails(errorDetails)}`)\n  }\n\n  // Add the page context onto the results.\n  if (queryJob && queryJob.isPage) {\n    result[`pageContext`] = Object.assign({}, queryJob.context)\n  }\n\n  // Delete internal data from pageContext\n  if (result.pageContext) {\n    delete result.pageContext.path\n    delete result.pageContext.internalComponentName\n    delete result.pageContext.component\n    delete result.pageContext.componentChunkName\n    delete result.pageContext.updatedAt\n    delete result.pageContext.pluginCreator___NODE\n    delete result.pageContext.pluginCreatorId\n    delete result.pageContext.componentPath\n    delete result.pageContext.context\n  }\n\n  const resultJSON = JSON.stringify(result)\n  const resultHash = require(`crypto`)\n    .createHash(`sha1`)\n    .update(resultJSON)\n    .digest(`base64`)\n\n  if (resultHashes[queryJob.id] !== resultHash) {\n    resultHashes[queryJob.id] = resultHash\n\n    if (queryJob.isPage) {\n      const publicDir = path.join(program.directory, `public`)\n      const { pages } = store.getState()\n      const page = pages.get(queryJob.id)\n      await pageDataUtil.write(\n        { publicDir },\n        page,\n        result,\n        webpackCompilationHash\n      )\n    } else {\n      // The babel plugin is hard-coded to load static queries from\n      // public/static/d/\n      const resultPath = path.join(\n        program.directory,\n        `public`,\n        `static`,\n        `d`,\n        `${queryJob.hash}.json`\n      )\n\n      await fs.outputFile(resultPath, resultJSON)\n    }\n  }\n\n  boundActionCreators.pageQueryRun({\n    path: queryJob.id,\n    componentPath: queryJob.componentPath,\n    isPage: queryJob.isPage,\n  })\n\n  return result\n}\n"],"file":"query-runner.js"}