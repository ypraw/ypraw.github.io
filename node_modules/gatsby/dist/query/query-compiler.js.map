{"version":3,"sources":["../../src/query/query-compiler.js"],"names":["normalize","require","levenshtein","_","boundActionCreators","websocketManager","printTransforms","IRTransforms","ValuesOfCorrectTypeRule","FragmentsOnCompositeTypesRule","KnownTypeNamesRule","LoneAnonymousOperationRule","PossibleFragmentSpreadsRule","ScalarLeafsRule","VariablesAreInputTypesRule","VariablesInAllowedPositionRule","Kind","print","validationRules","overlayErrorID","resolveThemes","themes","reduce","merged","theme","push","themeDir","Runner","constructor","base","additional","schema","parentSpan","compileAll","addError","nodes","parseEverything","results","write","filesRegex","pathRegex","modulesThatUseGatsby","files","path","join","map","module","folderPath","glob","sync","nodir","filter","d","match","concat","Array","from","store","getState","components","keys","c","uniq","parser","FileParser","parseFiles","compiledNodes","Map","namePathMap","nameDefMap","nameErrorMap","documents","fragmentMap","filePath","doc","entries","errors","length","error","location","start","definitions","templateLoc","locations","message","queryExtractionGraphQLError","componentPath","definition","kind","FRAGMENT_DEFINITION","fragmentName","name","value","has","get","set","forEach","def","compilerContext","GraphQLCompilerContext","addAll","ASTConvert","convertASTDocuments","RelayParser","transform","bind","formattedMessage","docName","codeBlock","printContext","slice","ctx","fragments","node","otherNode","text","getRoot","GraphQLIRPrinter","regex","str","toString","m","exec","index","lastIndex","closestFragment","f","fragment","score","sort","a","b","id","context","query","originalText","isHook","isStaticQuery","hash","kebabCase","relative","program","directory","process","env","NODE_ENV","useContext","report","panicOnBuild","compile","flattenedPlugins","activity","activityTimer","runner","plugin","pluginFilepath","span","queries","structuredErrors","gatsby_executing_command","emitError","end"],"mappings":"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","sourcesContent":["// @flow\nimport path from \"path\"\nconst normalize = require(`normalize-path`)\nimport glob from \"glob\"\nconst levenshtein = require(`fast-levenshtein`)\n\nimport { validate } from \"graphql\"\nimport { IRTransforms } from \"@gatsbyjs/relay-compiler\"\nimport RelayParser from \"@gatsbyjs/relay-compiler/lib/RelayParser\"\nimport ASTConvert from \"@gatsbyjs/relay-compiler/lib/ASTConvert\"\nimport GraphQLCompilerContext from \"@gatsbyjs/relay-compiler/lib/GraphQLCompilerContext\"\nimport filterContextForNode from \"@gatsbyjs/relay-compiler/lib/filterContextForNode\"\nimport getGatsbyDependents from \"../utils/gatsby-dependents\"\nconst _ = require(`lodash`)\n\nimport { store } from \"../redux\"\nconst { boundActionCreators } = require(`../redux/actions`)\nimport FileParser from \"./file-parser\"\nimport GraphQLIRPrinter from \"@gatsbyjs/relay-compiler/lib/GraphQLIRPrinter\"\nimport { graphqlError, multipleRootQueriesError } from \"./graphql-errors\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport errorParser, { locInGraphQlToLocInFile } from \"./error-parser\"\nconst websocketManager = require(`../utils/websocket-manager`)\n\nimport type { DocumentNode, GraphQLSchema } from \"graphql\"\n\nconst { printTransforms } = IRTransforms\n\nconst {\n  ValuesOfCorrectTypeRule,\n  FragmentsOnCompositeTypesRule,\n  KnownTypeNamesRule,\n  LoneAnonymousOperationRule,\n  PossibleFragmentSpreadsRule,\n  ScalarLeafsRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule,\n  Kind,\n  print,\n} = require(`graphql`)\n\ntype RootQuery = {\n  name: string,\n  path: string,\n  text: string,\n  originalText: string,\n  isStaticQuery: boolean,\n  hash: string,\n}\n\ntype Queries = Map<string, RootQuery>\n\nconst validationRules = [\n  ValuesOfCorrectTypeRule,\n  FragmentsOnCompositeTypesRule,\n  KnownTypeNamesRule,\n  LoneAnonymousOperationRule,\n  PossibleFragmentSpreadsRule,\n  ScalarLeafsRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule,\n]\n\nconst overlayErrorID = `graphql-compiler`\n\nconst resolveThemes = (themes = []) =>\n  themes.reduce((merged, theme) => {\n    merged.push(theme.themeDir)\n    return merged\n  }, [])\n\nclass Runner {\n  base: string\n  additional: string[]\n  schema: GraphQLSchema\n  errors: string[]\n  fragmentsDir: string\n\n  constructor(\n    base: string,\n    additional: string[],\n    schema: GraphQLSchema,\n    { parentSpan } = {}\n  ) {\n    this.base = base\n    this.additional = additional\n    this.schema = schema\n    this.parentSpan = parentSpan\n  }\n\n  async compileAll(addError) {\n    let nodes = await this.parseEverything(addError)\n    const results = await this.write(nodes, addError)\n\n    return results\n  }\n\n  async parseEverything(addError) {\n    const filesRegex = `*.+(t|j)s?(x)`\n    // Pattern that will be appended to searched directories.\n    // It will match any .js, .jsx, .ts, and .tsx files, that are not\n    // inside <searched_directory>/node_modules.\n    const pathRegex = `/{${filesRegex},!(node_modules)/**/${filesRegex}}`\n\n    const modulesThatUseGatsby = await getGatsbyDependents()\n\n    let files = [\n      path.join(this.base, `src`),\n      path.join(this.base, `.cache`, `fragments`),\n      ...this.additional.map(additional => path.join(additional, `src`)),\n      ...modulesThatUseGatsby.map(module => module.path),\n    ].reduce((merged, folderPath) => {\n      merged.push(\n        ...glob.sync(path.join(folderPath, pathRegex), {\n          nodir: true,\n        })\n      )\n      return merged\n    }, [])\n\n    files = files.filter(d => !d.match(/\\.d\\.ts$/))\n\n    files = files.map(normalize)\n\n    // We should be able to remove the following and preliminary tests do suggest\n    // that they aren't needed anymore since we transpile node_modules now\n    // However, there could be some cases (where a page is outside of src for example)\n    // that warrant keeping this and removing later once we have more confidence (and tests)\n\n    // Ensure all page components added as they're not necessarily in the\n    // pages directory e.g. a plugin could add a page component. Plugins\n    // *should* copy their components (if they add a query) to .cache so that\n    // our babel plugin to remove the query on building is active.\n    // Otherwise the component will throw an error in the browser of\n    // \"graphql is not defined\".\n    files = files.concat(\n      Array.from(store.getState().components.keys(), c => normalize(c))\n    )\n\n    files = _.uniq(files)\n\n    let parser = new FileParser({ parentSpan: this.parentSpan })\n\n    return await parser.parseFiles(files, addError)\n  }\n\n  async write(nodes: Map<string, DocumentNode>, addError): Promise<Queries> {\n    const compiledNodes: Queries = new Map()\n    const namePathMap = new Map()\n    const nameDefMap = new Map()\n    const nameErrorMap = new Map()\n    const documents = []\n    const fragmentMap = new Map()\n\n    for (let [filePath, doc] of nodes.entries()) {\n      let errors = validate(this.schema, doc, validationRules)\n\n      if (errors && errors.length) {\n        addError(\n          ...errors.map(error => {\n            const location = {\n              start: locInGraphQlToLocInFile(\n                doc.definitions[0].templateLoc,\n                error.locations[0]\n              ),\n            }\n            return errorParser({ message: error.message, filePath, location })\n          })\n        )\n\n        boundActionCreators.queryExtractionGraphQLError({\n          componentPath: filePath,\n        })\n        return compiledNodes\n      }\n\n      // The way we currently export fragments requires duplicated ones\n      // to be filtered out since there is a global Fragment namespace\n      // We maintain a top level fragment Map to keep track of all definitions\n      // of the fragment type and to filter them out if theythey've already been\n      // declared before\n      doc.definitions = doc.definitions.filter(definition => {\n        if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n          const fragmentName = definition.name.value\n          if (fragmentMap.has(fragmentName)) {\n            if (print(definition) === fragmentMap.get(fragmentName)) {\n              return false\n            }\n          } else {\n            fragmentMap.set(fragmentName, print(definition))\n          }\n        }\n        return true\n      })\n\n      documents.push(doc)\n      doc.definitions.forEach((def: any) => {\n        const name: string = def.name.value\n        namePathMap.set(name, filePath)\n        nameDefMap.set(name, def)\n      })\n    }\n\n    let compilerContext = new GraphQLCompilerContext(this.schema)\n    try {\n      compilerContext = compilerContext.addAll(\n        ASTConvert.convertASTDocuments(\n          this.schema,\n          documents,\n          validationRules,\n          RelayParser.transform.bind(RelayParser)\n        )\n      )\n    } catch (error) {\n      const { formattedMessage, docName, message, codeBlock } = graphqlError(\n        namePathMap,\n        nameDefMap,\n        error\n      )\n      nameErrorMap.set(docName, { formattedMessage, message, codeBlock })\n      boundActionCreators.queryExtractionGraphQLError({\n        componentPath: namePathMap.get(docName),\n        error: formattedMessage,\n      })\n\n      const filePath = namePathMap.get(docName)\n      addError(errorParser({ message, filePath }))\n\n      return false\n    }\n\n    // relay-compiler v1.5.0 added \"StripUnusedVariablesTransform\" to\n    // printTransforms. Unfortunately it currently doesn't detect variables\n    // in input objects widely used in gatsby, and therefore removing\n    // variable declaration from queries.\n    // As a temporary workaround remove that transform by slicing printTransforms.\n    const printContext = printTransforms\n      .slice(0, -1)\n      .reduce((ctx, transform) => transform(ctx, this.schema), compilerContext)\n\n    const fragments = []\n    compilerContext.documents().forEach(node => {\n      if (node.kind === `Fragment`) {\n        fragments.push(node.name)\n      }\n    })\n\n    compilerContext.documents().forEach((node: { name: string }) => {\n      if (node.kind !== `Root`) return\n      const { name } = node\n      let filePath = namePathMap.get(name) || ``\n      if (compiledNodes.has(filePath)) {\n        let otherNode = compiledNodes.get(filePath)\n\n        addError(\n          multipleRootQueriesError(\n            filePath,\n            nameDefMap.get(name),\n            otherNode && nameDefMap.get(otherNode.name)\n          )\n        )\n\n        boundActionCreators.queryExtractionGraphQLError({\n          componentPath: filePath,\n        })\n        return\n      }\n      let text\n      try {\n        text = filterContextForNode(printContext.getRoot(name), printContext)\n          .documents()\n          .map(GraphQLIRPrinter.print)\n          .join(`\\n`)\n      } catch (error) {\n        const regex = /Unknown\\sdocument\\s`(.*)`/gm\n        const str = error.toString()\n        let m\n\n        let fragmentName\n        while ((m = regex.exec(str)) !== null) {\n          // This is necessary to avoid infinite loops with zero-width matches\n          if (m.index === regex.lastIndex) regex.lastIndex++\n\n          fragmentName = m[1]\n        }\n\n        const closestFragment = fragments\n          .map(f => {\n            return { fragment: f, score: levenshtein.get(fragmentName, f) }\n          })\n          .filter(f => f.score < 10)\n          .sort((a, b) => a.score > b.score)[0]?.fragment\n\n        addError({\n          id: `85908`,\n          filePath,\n          context: { fragmentName, closestFragment },\n        })\n      }\n\n      const query = {\n        name,\n        text,\n        originalText: nameDefMap.get(name).text,\n        path: filePath,\n        isHook: nameDefMap.get(name).isHook,\n        isStaticQuery: nameDefMap.get(name).isStaticQuery,\n        hash: nameDefMap.get(name).hash,\n      }\n\n      if (query.isStaticQuery) {\n        query.id =\n          `sq--` +\n          _.kebabCase(\n            `${path.relative(store.getState().program.directory, filePath)}`\n          )\n      }\n\n      if (\n        query.isHook &&\n        process.env.NODE_ENV === `production` &&\n        typeof require(`react`).useContext !== `function`\n      ) {\n        report.panicOnBuild(\n          `You're likely using a version of React that doesn't support Hooks\\n` +\n            `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n        )\n      }\n\n      compiledNodes.set(filePath, query)\n    })\n\n    return compiledNodes\n  }\n}\nexport { Runner, resolveThemes }\n\nexport default async function compile({ parentSpan } = {}): Promise<\n  Map<string, RootQuery>\n> {\n  // TODO: swap plugins to themes\n  const { program, schema, themes, flattenedPlugins } = store.getState()\n\n  const activity = report.activityTimer(`extract queries from components`, {\n    parentSpan,\n    id: `query-extraction`,\n  })\n  activity.start()\n\n  const runner = new Runner(\n    program.directory,\n    resolveThemes(\n      themes.themes\n        ? themes.themes\n        : flattenedPlugins.map(plugin => {\n            return {\n              themeDir: plugin.pluginFilepath,\n            }\n          })\n    ),\n    schema,\n    { parentSpan: activity.span }\n  )\n\n  const errors = []\n  const addError = errors.push.bind(errors)\n\n  const queries = await runner.compileAll(addError)\n\n  if (errors.length !== 0) {\n    const structuredErrors = activity.panicOnBuild(errors)\n    if (process.env.gatsby_executing_command === `develop`) {\n      websocketManager.emitError(overlayErrorID, structuredErrors)\n    }\n  } else {\n    if (process.env.gatsby_executing_command === `develop`) {\n      // emitError with `null` as 2nd param to clear browser error overlay\n      websocketManager.emitError(overlayErrorID, null)\n    }\n  }\n  activity.end()\n\n  return queries\n}\n"],"file":"query-compiler.js"}