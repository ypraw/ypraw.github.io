{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","Promise","telemetry","apiRunnerNode","getBrowserslist","store","emitter","loadPlugins","loadThemes","report","getConfigFile","tracer","globalTracer","preferDefault","process","on","reason","p","panic","createGraphqlRunner","extractQueries","requiresWriter","writeRedirects","module","exports","args","spanArgs","parentSpan","childOf","bootstrapSpan","startSpan","setStore","directory","program","browserslist","dispatch","type","payload","activityForJobs","phantomActivity","start","onEndJob","getState","jobs","active","length","end","activity","activityTimer","configModule","configFilePath","config","id","context","configName","__experimentalThemes","warn","themes","useLegacyThemes","rootDir","plugins","polyfill","flattenedPlugins","decorateEvent","map","name","version","span","env","NODE_ENV","pluginVersions","hashes","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","cacheDirectory","remove","emptyDir","e","error","ensureDir","GATSBY_DB_NODES","loki","dbSaveFile","saveFile","dirname","srcDir","__dirname","siteDir","tryRequire","copy","clobber","ensureDirSync","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","join","Array","isArray","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserPluginsRequires","relativePluginPath","relative","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","build","extensions","apiResults","traceId","flattenDeep","graphqlRunner","graphql","waitForCascadingActions","rebuildWithSitePage","writeAll","log","uptime","toFixed","emit","boundActionCreators","setProgramStatus","finish"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\nconst Promise = require(`bluebird`)\nconst telemetry = require(`gatsby-telemetry`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst getBrowserslist = require(`../utils/browserslist`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst loadThemes = require(`./load-themes`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst getConfigFile = require(`./get-config-file`)\nconst tracer = require(`opentracing`).globalTracer()\nconst preferDefault = require(`./prefer-default`)\n// Add `util.promisify` polyfill for old node versions\nrequire(`util.promisify/shim`)()\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst createGraphqlRunner = require(`./graphql-runner`)\nconst { extractQueries } = require(`../query/query-watcher`)\nconst requiresWriter = require(`./requires-writer`)\nconst { writeRedirects } = require(`./redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n  parentSpan: Object,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const spanArgs = args.parentSpan ? { childOf: args.parentSpan } : {}\n  const bootstrapSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  /* Time for a little story...\n   * When running `gatsby develop`, the globally installed gatsby-cli starts\n   * and sets up a Redux store (which is where logs are now stored). When gatsby\n   * finds your project's locally installed gatsby-cli package in node_modules,\n   * it switches over. This instance will have a separate redux store. We need to\n   * ensure that the correct store is used which is why we call setStore\n   * (/packages/gatsby-cli/src/reporter/redux/index.js)\n   *\n   * This function\n   * - copies over the logs from the global gatsby-cli to the local one\n   * - sets the store to the local one (so that further actions dispatched by\n   * the global gatsby-cli are handled by the local one)\n   */\n  if (args.setStore) {\n    args.setStore(store)\n  }\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  require(`../redux/plugin-runner`)\n\n  const directory = slash(args.directory)\n\n  const program = {\n    ...args,\n    browserslist: getBrowserslist(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  let activityForJobs\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = report.phantomActivity(`Running jobs`)\n      activityForJobs.start()\n    }\n  })\n\n  const onEndJob = () => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end()\n      activityForJobs = null\n    }\n  }\n\n  emitter.on(`END_JOB`, onEndJob)\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = report.activityTimer(`open and validate gatsby-configs`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const { configModule, configFilePath } = await getConfigFile(\n    program.directory,\n    `gatsby-config`\n  )\n  let config = preferDefault(configModule)\n\n  // The root config cannot be exported as a function, only theme configs\n  if (typeof config === `function`) {\n    report.panic({\n      id: `10126`,\n      context: {\n        configName: `gatsby-config`,\n        path: program.directory,\n      },\n    })\n  }\n\n  // theme gatsby configs can be functions or objects\n  if (config && config.__experimentalThemes) {\n    report.warn(\n      `The gatsby-config key \"__experimentalThemes\" has been deprecated. Please use the \"plugins\" key instead.`\n    )\n    const themes = await loadThemes(config, {\n      useLegacyThemes: true,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = themes.config\n\n    store.dispatch({\n      type: `SET_RESOLVED_THEMES`,\n      payload: themes.themes,\n    })\n  } else if (config) {\n    const plugins = await loadThemes(config, {\n      useLegacyThemes: false,\n      configFilePath,\n      rootDir: program.directory,\n    })\n    config = plugins.config\n  }\n\n  if (config && config.polyfill) {\n    report.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  activity = report.activityTimer(`load plugins`, { parentSpan: bootstrapSpan })\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, program.directory)\n  activity.end()\n\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: flattenedPlugins.map(p => `${p.name}@${p.version}`),\n  })\n\n  // onPreInit\n  activity = report.activityTimer(`onPreInit`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  // During builds, delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  if (process.env.NODE_ENV === `production`) {\n    activity = report.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan: bootstrapSpan,\n      }\n    )\n    activity.start()\n    await del([\n      `public/**/*.{html,css}`,\n      `!public/page-data/**/*`,\n      `!public/static`,\n      `!public/static/**/*.{html,css}`,\n    ])\n    activity.end()\n  }\n\n  activity = report.activityTimer(`initialize cache`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `)\n  }\n  const cacheDirectory = `${program.directory}/.cache`\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      // Attempt to empty dir if remove fails,\n      // like when directory is mount point\n      await fs.remove(cacheDirectory).catch(() => fs.emptyDir(cacheDirectory))\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${program.directory}/public/static`)\n\n  activity.end()\n\n  if (process.env.GATSBY_DB_NODES === `loki`) {\n    const loki = require(`../db/loki`)\n    // Start the nodes database (in memory loki js with interval disk\n    // saves). If data was saved from a previous build, it will be\n    // loaded here\n    activity = report.activityTimer(`start nodes db`, {\n      parentSpan: bootstrapSpan,\n    })\n    activity.start()\n    const dbSaveFile = `${cacheDirectory}/loki/loki.db`\n    try {\n      await loki.start({\n        saveFile: dbSaveFile,\n      })\n    } catch (e) {\n      report.error(\n        `Error starting DB. Perhaps try deleting ${path.dirname(dbSaveFile)}`\n      )\n    }\n    activity.end()\n  }\n\n  activity = report.activityTimer(`copy gatsby files`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, {\n      clobber: true,\n    })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${cacheDirectory}/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exist as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        return slash(\n          require.resolve(path.join(plugin.resolve, `gatsby-${env}`))\n        )\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(plugin => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativePluginPath = path.relative(siteDir, plugin.resolve)\n      return `{\n      plugin: require('${slash(relativePluginPath)}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    })\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../utils/source-nodes`)({ parentSpan: activity.span })\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).build({ parentSpan: activity.span })\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan: bootstrapSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = createGraphqlRunner(store, report)\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql: graphqlRunner,\n      traceId: `initial-createPages`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    { activity }\n  )\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(\n    `createPagesStatefully`,\n    {\n      graphql: graphqlRunner,\n      traceId: `initial-createPagesStatefully`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    {\n      activity,\n    }\n  )\n  activity.end()\n\n  activity = report.activityTimer(`onPreExtractQueries`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`, { parentSpan: activity.span })\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await require(`../schema`).rebuildWithSitePage({ parentSpan: activity.span })\n  activity.end()\n\n  await extractQueries({ parentSpan: bootstrapSpan })\n\n  // Write out files.\n  activity = report.activityTimer(`write out requires`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  try {\n    await requiresWriter.writeAll(store.getState())\n  } catch (err) {\n    report.panic(`Failed to write out requires`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  activity = report.activityTimer(`onPostBootstrap`, {\n    parentSpan: bootstrapSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPostBootstrap`, { parentSpan: activity.span })\n  activity.end()\n\n  report.log(``)\n  report.info(`bootstrap finished - ${process.uptime().toFixed(3)} s`)\n  report.log(``)\n  emitter.emit(`BOOTSTRAP_FINISHED`)\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_FINISHED`\n  )\n\n  bootstrapSpan.finish()\n\n  return { graphqlRunner }\n}\n"],"file":"index.js"}