{"version":3,"sources":["../../../src/bootstrap/load-plugins/validate.js"],"names":["_","require","semver","gatsbyVersion","version","reporter","resolveModuleExports","getBadExports","plugin","pluginAPIKeys","apis","badExports","concat","difference","map","e","exportName","pluginName","name","pluginVersion","getBadExportsMessage","exportType","stripIndent","stringSimiliarity","capitalized","toUpperCase","slice","message","forEach","bady","similarities","findBestMatch","isDefaultPlugin","badExportsMigrationMap","modifyWebpackConfig","replacement","migrationLink","wrapRootComponent","isOldAPI","Object","keys","includes","bestMatch","rating","target","handleBadExports","toPairs","badItem","entries","length","panicOnBuild","collatePluginAPIs","flattenedPlugins","node","browser","ssr","nodeAPIs","browserAPIs","ssrAPIs","pluginNodeExports","resolve","mode","pluginBrowserExports","pluginSSRExports","intersection","handleMultipleReplaceRenderers","rendererPlugins","filter","warn","join","console","log","error","process","env","NODE_ENV","exit","ignorable","messages","fp","i","push","skipSSR","m","warnOnIncompatiblePeerDependency","packageJSON","gatsbyPeerDependency","get","satisfies","includePrerelease","module","exports"],"mappings":"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","sourcesContent":["const _ = require(`lodash`)\nconst semver = require(`semver`)\nconst { version: gatsbyVersion } = require(`gatsby/package.json`)\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst resolveModuleExports = require(`../resolve-module-exports`)\n\n// Given a plugin object, an array of the API names it exports and an\n// array of valid API names, return an array of invalid API exports.\nconst getBadExports = (plugin, pluginAPIKeys, apis) => {\n  let badExports = []\n  // Discover any exports from plugins which are not \"known\"\n  badExports = badExports.concat(\n    _.difference(pluginAPIKeys, apis).map(e => {\n      return {\n        exportName: e,\n        pluginName: plugin.name,\n        pluginVersion: plugin.version,\n      }\n    })\n  )\n  return badExports\n}\n\nconst getBadExportsMessage = (badExports, exportType, apis) => {\n  const { stripIndent } = require(`common-tags`)\n  const stringSimiliarity = require(`string-similarity`)\n  let capitalized = `${exportType[0].toUpperCase()}${exportType.slice(1)}`\n  if (capitalized === `Ssr`) capitalized = `SSR`\n\n  let message = `\\n`\n  message += stripIndent`\n    Your plugins must export known APIs from their gatsby-${exportType}.js.\n    The following exports aren't APIs. Perhaps you made a typo or your plugin is outdated?\n\n    See https://www.gatsbyjs.org/docs/${exportType}-apis/ for the list of Gatsby ${capitalized} APIs\n  `\n\n  badExports.forEach(bady => {\n    message += `\\n\\n`\n    const similarities = stringSimiliarity.findBestMatch(bady.exportName, apis)\n    const isDefaultPlugin = bady.pluginName == `default-site-plugin`\n    const badExportsMigrationMap = {\n      modifyWebpackConfig: {\n        replacement: `onCreateWebpackConfig`,\n        migrationLink: `https://gatsby.dev/update-webpack-config`,\n      },\n      wrapRootComponent: {\n        replacement: `wrapRootElement`,\n        migrationLink: `https://gatsby.dev/update-wraprootcomponent`,\n      },\n    }\n    const isOldAPI = Object.keys(badExportsMigrationMap).includes(\n      bady.exportName\n    )\n\n    if (isDefaultPlugin && isOldAPI) {\n      const { replacement, migrationLink } = badExportsMigrationMap[\n        bady.exportName\n      ]\n      message += stripIndent`\n        - Your site's gatsby-${exportType}.js is exporting \"${\n        bady.exportName\n      }\" which was removed in Gatsby v2. Refer to the migration guide for more info on upgrading to \"${replacement}\":\n      `\n      message += `\\n ${migrationLink}`\n    } else if (isDefaultPlugin) {\n      message += stripIndent`\n        - Your site's gatsby-${exportType}.js is exporting a variable named \"${\n        bady.exportName\n      }\" which isn't an API.\n      `\n    } else {\n      message += stripIndent`\n        - The plugin \"${bady.pluginName}@${\n        bady.pluginVersion\n      }\" is exporting a variable named \"${bady.exportName}\" which isn't an API.\n      `\n    }\n\n    if (similarities.bestMatch.rating > 0.5 && !isOldAPI) {\n      message += `\\n\\n`\n      message += `Perhaps you meant to export \"${\n        similarities.bestMatch.target\n      }\"?`\n    }\n  })\n\n  return message\n}\n\nconst handleBadExports = ({ apis, badExports }) => {\n  // Output error messages for all bad exports\n  _.toPairs(badExports).forEach(badItem => {\n    const [exportType, entries] = badItem\n    if (entries.length > 0) {\n      reporter.panicOnBuild(\n        getBadExportsMessage(entries, exportType, apis[exportType])\n      )\n    }\n  })\n}\n\n/**\n * Identify which APIs each plugin exports\n */\nconst collatePluginAPIs = ({ apis, flattenedPlugins }) => {\n  // Get a list of bad exports\n  const badExports = {\n    node: [],\n    browser: [],\n    ssr: [],\n  }\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.nodeAPIs = []\n    plugin.browserAPIs = []\n    plugin.ssrAPIs = []\n\n    // Discover which APIs this plugin implements and store an array against\n    // the plugin node itself *and* in an API to plugins map for faster lookups\n    // later.\n    const pluginNodeExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-node`,\n      {\n        mode: `require`,\n      }\n    )\n    const pluginBrowserExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-browser`\n    )\n    const pluginSSRExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-ssr`\n    )\n\n    if (pluginNodeExports.length > 0) {\n      plugin.nodeAPIs = _.intersection(pluginNodeExports, apis.node)\n      badExports.node = badExports.node.concat(\n        getBadExports(plugin, pluginNodeExports, apis.node)\n      ) // Collate any bad exports\n    }\n\n    if (pluginBrowserExports.length > 0) {\n      plugin.browserAPIs = _.intersection(pluginBrowserExports, apis.browser)\n      badExports.browser = badExports.browser.concat(\n        getBadExports(plugin, pluginBrowserExports, apis.browser)\n      ) // Collate any bad exports\n    }\n\n    if (pluginSSRExports.length > 0) {\n      plugin.ssrAPIs = _.intersection(pluginSSRExports, apis.ssr)\n      badExports.ssr = badExports.ssr.concat(\n        getBadExports(plugin, pluginSSRExports, apis.ssr)\n      ) // Collate any bad exports\n    }\n  })\n\n  return { flattenedPlugins, badExports }\n}\n\nconst handleMultipleReplaceRenderers = ({ flattenedPlugins }) => {\n  // multiple replaceRenderers may cause problems at build time\n  const rendererPlugins = flattenedPlugins\n    .filter(plugin => plugin.ssrAPIs.includes(`replaceRenderer`))\n    .map(plugin => plugin.name)\n  if (rendererPlugins.length > 1) {\n    if (rendererPlugins.includes(`default-site-plugin`)) {\n      reporter.warn(`replaceRenderer API found in these plugins:`)\n      reporter.warn(rendererPlugins.join(`, `))\n      reporter.warn(\n        `This might be an error, see: https://www.gatsbyjs.org/docs/debugging-replace-renderer-api/`\n      )\n    } else {\n      console.log(``)\n      reporter.error(\n        `Gatsby's replaceRenderer API is implemented by multiple plugins:`\n      )\n      reporter.error(rendererPlugins.join(`, `))\n      reporter.error(`This will break your build`)\n      reporter.error(\n        `See: https://www.gatsbyjs.org/docs/debugging-replace-renderer-api/`\n      )\n      if (process.env.NODE_ENV === `production`) process.exit(1)\n    }\n\n    // Now update plugin list so only final replaceRenderer will run\n    const ignorable = rendererPlugins.slice(0, -1)\n\n    // For each plugin in ignorable, set a skipSSR flag to true\n    // This prevents apiRunnerSSR() from attempting to run it later\n    const messages = []\n    flattenedPlugins.forEach((fp, i) => {\n      if (ignorable.includes(fp.name)) {\n        messages.push(\n          `Duplicate replaceRenderer found, skipping gatsby-ssr.js for plugin: ${\n            fp.name\n          }`\n        )\n        flattenedPlugins[i].skipSSR = true\n      }\n    })\n    if (messages.length > 0) {\n      console.log(``)\n      messages.forEach(m => reporter.warn(m))\n      console.log(``)\n    }\n  }\n\n  return flattenedPlugins\n}\n\nfunction warnOnIncompatiblePeerDependency(name, packageJSON) {\n  // Note: In the future the peer dependency should be enforced for all plugins.\n  const gatsbyPeerDependency = _.get(packageJSON, `peerDependencies.gatsby`)\n  if (\n    gatsbyPeerDependency &&\n    !semver.satisfies(gatsbyVersion, gatsbyPeerDependency, {\n      includePrerelease: true,\n    })\n  ) {\n    reporter.warn(\n      `Plugin ${name} is not compatible with your gatsby version ${gatsbyVersion} - It requires gatsby@${gatsbyPeerDependency}`\n    )\n  }\n}\n\nmodule.exports = {\n  collatePluginAPIs,\n  handleBadExports,\n  handleMultipleReplaceRenderers,\n  warnOnIncompatiblePeerDependency,\n}\n"],"file":"validate.js"}