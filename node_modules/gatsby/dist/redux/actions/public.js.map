{"version":3,"sources":["../../../src/redux/actions/public.js"],"names":["Joi","require","chalk","_","stripIndent","report","path","fs","truePath","url","slash","hasNodeChanged","getNode","trackInlineObjectsInRootNode","store","fileExistsSync","sync","joiSchemas","generateComponentChunkName","apiRunnerNode","actions","findChildrenRecursively","children","concat","map","child","newChildren","isArray","length","deletePage","page","type","payload","pascalCase","flow","camelCase","upperFirst","hasWarnedForPageComponentInvalidContext","Set","hasWarnedForPageComponentInvalidCasing","pageComponentCache","fileOkCache","createPage","plugin","actionOptions","noPageOrComponent","name","message","process","env","NODE_ENV","console","log","bold","red","isObject","context","reservedFields","invalidFields","Object","keys","pick","singularMessage","pluralMessage","error","f","join","JSON","stringify","some","panic","has","component","warn","add","originalPageComponent","trueComponentPath","markers","split","letter","index","isAbsolute","internalComponentName","internalPage","matchPath","componentChunkName","isCreatedByStatefulCreatePages","traceId","updatedAt","Date","now","includes","fileName","fileContent","readFileSync","notEmpty","includesDefaultExport","test","extname","relativePath","relative","getState","program","directory","panicOnBuild","oldPage","pages","get","contextModified","isEqual","alternateSlashPath","endsWith","slice","deleteNode","options","args","id","msg","node","pluginName","typeOwners","internal","Error","createDeleteAction","deleteAction","deleteDescendantsActions","deleteNodes","nodes","descendantNodes","flatten","n","deleteNodesAction","createNode","array","parent","owner","result","validate","nodeSchema","fields","oldNode","parentSpan","setTag","deleteActions","updateNodeAction","contentDigest","dispatch","createNodeAction","Array","find","action","undefined","traceTags","nodeId","nodeType","touchNode","createNodeField","value","fieldName","fieldValue","fieldOwners","schemaFieldName","fieldOwner","createParentChildLink","push","uniq","setWebpackConfig","config","replaceWebpackConfig","setBabelOptions","exit","setBabelPlugin","setBabelPreset","createJob","job","setJob","endJob","setPluginStatus","status","maybeAddPathPrefix","pathPrefix","parsed","parse","isRelativeProtocol","startsWith","protocol","createRedirect","fromPath","isPermanent","redirectInBrowser","toPath","rest","prefixPaths","createPageDependency","connection","module","exports"],"mappings":"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","sourcesContent":["// @flow\nconst Joi = require(`joi`)\nconst chalk = require(`chalk`)\nconst _ = require(`lodash`)\nconst { stripIndent } = require(`common-tags`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst path = require(`path`)\nconst fs = require(`fs`)\nconst truePath = require(`true-case-path`)\nconst url = require(`url`)\nconst slash = require(`slash`)\nconst { hasNodeChanged, getNode } = require(`../../db/nodes`)\nconst { trackInlineObjectsInRootNode } = require(`../../db/node-tracking`)\nconst { store } = require(`..`)\nconst fileExistsSync = require(`fs-exists-cached`).sync\nconst joiSchemas = require(`../../joi-schemas/joi`)\nconst { generateComponentChunkName } = require(`../../utils/js-chunk-names`)\nconst apiRunnerNode = require(`../../utils/api-runner-node`)\n\nconst actions = {}\n\nconst findChildrenRecursively = (children = []) => {\n  children = children.concat(\n    ...children.map(child => {\n      const newChildren = getNode(child).children\n      if (_.isArray(newChildren) && newChildren.length > 0) {\n        return findChildrenRecursively(newChildren)\n      } else {\n        return []\n      }\n    })\n  )\n\n  return children\n}\n\nimport type { Plugin } from \"./types\"\n\ntype Job = {\n  id: string,\n}\ntype PageInput = {\n  path: string,\n  component: string,\n  context?: Object,\n}\n\ntype Page = {\n  path: string,\n  matchPath: ?string,\n  component: string,\n  context: Object,\n  internalComponentName: string,\n  componentChunkName: string,\n  updatedAt: number,\n}\n\ntype ActionOptions = {\n  traceId: ?string,\n  parentSpan: ?Object,\n  followsSpan: ?Object,\n}\n\n/**\n * Delete a page\n * @param {Object} page a page object\n * @param {string} page.path The path of the page\n * @param {string} page.component The absolute path to the page component\n * @example\n * deletePage(page)\n */\nactions.deletePage = (page: PageInput) => {\n  return {\n    type: `DELETE_PAGE`,\n    payload: page,\n  }\n}\n\nconst pascalCase = _.flow(\n  _.camelCase,\n  _.upperFirst\n)\nconst hasWarnedForPageComponentInvalidContext = new Set()\nconst hasWarnedForPageComponentInvalidCasing = new Set()\nconst pageComponentCache = {}\nconst fileOkCache = {}\n\n/**\n * Create a page. See [the guide on creating and modifying pages](/docs/creating-and-modifying-pages/)\n * for detailed documentation about creating pages.\n * @param {Object} page a page object\n * @param {string} page.path Any valid URL. Must start with a forward slash\n * @param {string} page.component The absolute path to the component for this page\n * @param {Object} page.context Context data for this page. Passed as props\n * to the component `this.props.pageContext` as well as to the graphql query\n * as graphql arguments.\n * @example\n * createPage({\n *   path: `/my-sweet-new-page/`,\n *   component: path.resolve(`./src/templates/my-sweet-new-page.js`),\n *   // The context is passed as props to the component as well\n *   // as into the component's GraphQL query.\n *   context: {\n *     id: `123456`,\n *   },\n * })\n */\nactions.createPage = (\n  page: PageInput,\n  plugin?: Plugin,\n  actionOptions?: ActionOptions\n) => {\n  let noPageOrComponent = false\n  let name = `The plugin \"${plugin.name}\"`\n  if (plugin.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  if (!page.path) {\n    const message = `${name} must set the page path when creating a page`\n    // Don't log out when testing\n    if (process.env.NODE_ENV !== `test`) {\n      console.log(chalk.bold.red(message))\n      console.log(``)\n      console.log(page)\n    } else {\n      return message\n    }\n    noPageOrComponent = true\n  }\n\n  // Validate that the context object doesn't overlap with any core page fields\n  // as this will cause trouble when running graphql queries.\n  if (_.isObject(page.context)) {\n    const reservedFields = [\n      `path`,\n      `matchPath`,\n      `component`,\n      `componentChunkName`,\n      `pluginCreator___NODE`,\n      `pluginCreatorId`,\n    ]\n    const invalidFields = Object.keys(_.pick(page.context, reservedFields))\n\n    const singularMessage = `${name} used a reserved field name in the context object when creating a page:`\n    const pluralMessage = `${name} used reserved field names in the context object when creating a page:`\n    if (invalidFields.length > 0) {\n      const error = `${\n        invalidFields.length === 1 ? singularMessage : pluralMessage\n      }\n\n${invalidFields.map(f => `  * \"${f}\"`).join(`\\n`)}\n\n${JSON.stringify(page, null, 4)}\n\nData in \"context\" is passed to GraphQL as potential arguments when running the\npage query.\n\nWhen arguments for GraphQL are constructed, the context object is combined with\nthe page object so *both* page object and context data are available as\narguments. So you don't need to add the page \"path\" to the context as it's\nalready available in GraphQL. If a context field duplicates a field already\nused by the page object, this can break functionality within Gatsby so must be\navoided.\n\nPlease choose another name for the conflicting fields.\n\nThe following fields are used by the page object and should be avoided.\n\n${reservedFields.map(f => `  * \"${f}\"`).join(`\\n`)}\n\n            `\n      if (process.env.NODE_ENV === `test`) {\n        return error\n        // Only error if the context version is different than the page\n        // version.  People in v1 often thought that they needed to also pass\n        // the path to context for it to be available in GraphQL\n      } else if (invalidFields.some(f => page.context[f] !== page[f])) {\n        report.panic(error)\n      } else {\n        if (!hasWarnedForPageComponentInvalidContext.has(page.component)) {\n          report.warn(error)\n          hasWarnedForPageComponentInvalidContext.add(page.component)\n        }\n      }\n    }\n  }\n\n  // Don't check if the component exists during tests as we use a lot of fake\n  // component paths.\n  if (process.env.NODE_ENV !== `test`) {\n    if (!fileExistsSync(page.component)) {\n      const message = `${name} created a page with a component that doesn't exist. Missing component is ${\n        page.component\n      }`\n      console.log(``)\n      console.log(chalk.bold.red(message))\n      console.log(``)\n      console.log(page)\n      noPageOrComponent = true\n    } else if (page.component) {\n      // check if we've processed this component path\n      // before, before running the expensive \"truePath\"\n      // operation\n      if (pageComponentCache[page.component]) {\n        page.component = pageComponentCache[page.component]\n      } else {\n        const originalPageComponent = page.component\n\n        // normalize component path\n        page.component = slash(page.component)\n        // check if path uses correct casing - incorrect casing will\n        // cause issues in query compiler and inconsistencies when\n        // developing on Mac or Windows and trying to deploy from\n        // linux CI/CD pipeline\n        const trueComponentPath = slash(truePath(page.component))\n        if (trueComponentPath !== page.component) {\n          if (!hasWarnedForPageComponentInvalidCasing.has(page.component)) {\n            const markers = page.component\n              .split(``)\n              .map((letter, index) => {\n                if (letter !== trueComponentPath[index]) {\n                  return `^`\n                }\n                return ` `\n              })\n              .join(``)\n\n            report.warn(\n              stripIndent`\n            ${name} created a page with a component path that doesn't match the casing of the actual file. This may work locally, but will break on systems which are case-sensitive, e.g. most CI/CD pipelines.\n\n            page.component:     \"${page.component}\"\n            path in filesystem: \"${trueComponentPath}\"\n                                 ${markers}\n          `\n            )\n            hasWarnedForPageComponentInvalidCasing.add(page.component)\n          }\n\n          page.component = trueComponentPath\n        }\n        pageComponentCache[originalPageComponent] = page.component\n      }\n    }\n  }\n\n  if (!page.component || !path.isAbsolute(page.component)) {\n    const message = `${name} must set the absolute path to the page component when create creating a page`\n    // Don't log out when testing\n    if (process.env.NODE_ENV !== `test`) {\n      console.log(``)\n      console.log(chalk.bold.red(message))\n      console.log(``)\n      console.log(page)\n    } else {\n      return message\n    }\n    noPageOrComponent = true\n  }\n\n  if (noPageOrComponent) {\n    report.panic(\n      `See the documentation for createPage https://www.gatsbyjs.org/docs/actions/#createPage`\n    )\n  }\n\n  let internalComponentName\n  if (page.path === `/`) {\n    internalComponentName = `ComponentIndex`\n  } else {\n    internalComponentName = `Component${pascalCase(page.path)}`\n  }\n\n  let internalPage: Page = {\n    internalComponentName,\n    path: page.path,\n    matchPath: page.matchPath,\n    component: page.component,\n    componentChunkName: generateComponentChunkName(page.component),\n    isCreatedByStatefulCreatePages:\n      actionOptions &&\n      actionOptions.traceId === `initial-createPagesStatefully`,\n    // Ensure the page has a context object\n    context: page.context || {},\n    updatedAt: Date.now(),\n  }\n\n  // If the path doesn't have an initial forward slash, add it.\n  if (internalPage.path[0] !== `/`) {\n    internalPage.path = `/${internalPage.path}`\n  }\n\n  // Validate that the page component imports React and exports something\n  // (hopefully a component).\n  //\n  // Only run validation once during builds.\n  if (\n    !internalPage.component.includes(`/.cache/`) &&\n    (process.env.NODE_ENV === `production` &&\n      !fileOkCache[internalPage.component])\n  ) {\n    const fileName = internalPage.component\n    const fileContent = fs.readFileSync(fileName, `utf-8`)\n    let notEmpty = true\n    let includesDefaultExport = true\n\n    if (fileContent === ``) {\n      notEmpty = false\n    }\n\n    if (\n      !fileContent.includes(`export default`) &&\n      !fileContent.includes(`module.exports`) &&\n      !fileContent.includes(`exports.default`) &&\n      // this check only applies to js and ts, not mdx\n      /\\.(jsx?|tsx?)/.test(path.extname(fileName))\n    ) {\n      includesDefaultExport = false\n    }\n    if (!notEmpty || !includesDefaultExport) {\n      const relativePath = path.relative(\n        store.getState().program.directory,\n        fileName\n      )\n\n      if (!notEmpty) {\n        report.panicOnBuild(\n          `You have an empty file in the \"src/pages\" directory at \"${relativePath}\". Please remove it or make it a valid component`\n        )\n      }\n\n      if (!includesDefaultExport) {\n        report.panicOnBuild(\n          `[${fileName}] The page component must export a React component for it to be valid`\n        )\n      }\n    }\n\n    fileOkCache[internalPage.component] = true\n  }\n\n  const oldPage: Page = store.getState().pages.get(internalPage.path)\n  const contextModified =\n    !!oldPage && !_.isEqual(oldPage.context, internalPage.context)\n\n  const alternateSlashPath = page.path.endsWith(`/`)\n    ? page.path.slice(0, -1)\n    : page.path + `/`\n\n  if (store.getState().pages.has(alternateSlashPath)) {\n    report.warn(\n      `Attempting to create page \"${\n        page.path\n      }\", but page \"${alternateSlashPath}\" already exists. This could lead to non-deterministic routing behavior`\n    )\n  }\n\n  return {\n    ...actionOptions,\n    type: `CREATE_PAGE`,\n    contextModified,\n    plugin,\n    payload: internalPage,\n  }\n}\n\n/**\n * Delete a node\n * @param {object} $0\n * @param {object} $0.node the node object\n * @example\n * deleteNode({node: node})\n */\nactions.deleteNode = (options: any, plugin: Plugin, args: any) => {\n  let id\n\n  // Check if using old method signature. Warn about incorrect usage but get\n  // node from nodeID anyway.\n  if (typeof options === `string`) {\n    let msg =\n      `Calling \"deleteNode\" with a nodeId is deprecated. Please pass an ` +\n      `object containing a full node instead: deleteNode({ node }).`\n    if (args && args.name) {\n      // `plugin` used to be the third argument\n      plugin = args\n      msg = msg + ` \"deleteNode\" was called by ${plugin.name}`\n    }\n    report.warn(msg)\n\n    id = options\n  } else {\n    id = options && options.node && options.node.id\n  }\n\n  // Always get node from the store, as the node we get as an arg\n  // might already have been deleted.\n  const node = getNode(id)\n  if (plugin) {\n    const pluginName = plugin.name\n\n    if (node && typeOwners[node.internal.type] !== pluginName)\n      throw new Error(stripIndent`\n          The plugin \"${pluginName}\" deleted a node of a type owned by another plugin.\n\n          The node type \"${node.internal.type}\" is owned by \"${\n        typeOwners[node.internal.type]\n      }\".\n\n          The node object passed to \"deleteNode\":\n\n          ${JSON.stringify(node, null, 4)}\n\n          The plugin deleting the node:\n\n          ${JSON.stringify(plugin, null, 4)}\n        `)\n  }\n\n  const createDeleteAction = node => {\n    return {\n      type: `DELETE_NODE`,\n      plugin,\n      payload: node,\n    }\n  }\n\n  const deleteAction = createDeleteAction(node)\n\n  // It's possible the file node was never created as sometimes tools will\n  // write and then immediately delete temporary files to the file system.\n  const deleteDescendantsActions =\n    node &&\n    findChildrenRecursively(node.children)\n      .map(getNode)\n      .map(createDeleteAction)\n\n  if (deleteDescendantsActions && deleteDescendantsActions.length) {\n    return [...deleteDescendantsActions, deleteAction]\n  } else {\n    return deleteAction\n  }\n}\n\n/**\n * Batch delete nodes\n * @param {Array} nodes an array of node ids\n * @example\n * deleteNodes([`node1`, `node2`])\n */\nactions.deleteNodes = (nodes: any[], plugin: Plugin) => {\n  let msg =\n    `The \"deleteNodes\" action is now deprecated and will be removed in ` +\n    `Gatsby v3. Please use \"deleteNode\" instead.`\n  if (plugin && plugin.name) {\n    msg = msg + ` \"deleteNodes\" was called by ${plugin.name}`\n  }\n  report.warn(msg)\n\n  // Also delete any nodes transformed from these.\n  const descendantNodes = _.flatten(\n    nodes.map(n => findChildrenRecursively(getNode(n).children))\n  )\n\n  const deleteNodesAction = {\n    type: `DELETE_NODES`,\n    plugin,\n    payload: [...nodes, ...descendantNodes],\n  }\n  return deleteNodesAction\n}\n\nconst typeOwners = {}\n/**\n * Create a new node.\n * @param {Object} node a node object\n * @param {string} node.id The node's ID. Must be globally unique.\n * @param {string} node.parent The ID of the parent's node. If the node is\n * derived from another node, set that node as the parent. Otherwise it can\n * just be `null`.\n * @param {Array} node.children An array of children node IDs. If you're\n * creating the children nodes while creating the parent node, add the\n * children node IDs here directly. If you're adding a child node to a\n * parent node created by a plugin, you can't mutate this value directly\n * to add your node id, instead use the action creator `createParentChildLink`.\n * @param {Object} node.internal node fields that aren't generally\n * interesting to consumers of node data but are very useful for plugin writers\n * and Gatsby core.\n * @param {string} node.internal.mediaType An optional field to indicate to\n * transformer plugins that your node has raw content they can transform.\n * Use either an official media type (we use mime-db as our source\n * (https://www.npmjs.com/package/mime-db) or a made-up one if your data\n * doesn't fit in any existing bucket. Transformer plugins use node media types\n * for deciding if they should transform a node into a new one. E.g.\n * markdown transformers look for media types of\n * `text/markdown`.\n * @param {string} node.internal.type An arbitrary globally unique type\n * chosen by the plugin creating the node. Should be descriptive of the\n * node as the type is used in forming GraphQL types so users will query\n * for nodes based on the type choosen here. Nodes of a given type can\n * only be created by one plugin.\n * @param {string} node.internal.content An optional field. This is rarely\n * used. It is used when a source plugin sources data it doesn't know how\n * to transform e.g. a markdown string pulled from an API. The source plugin\n * can defer the transformation to a specialized transformer plugin like\n * gatsby-transformer-remark. This `content` field holds the raw content\n * (so for the markdown case, the markdown string).\n *\n * Data that's already structured should be added to the top-level of the node\n * object and _not_ added here. You should not `JSON.stringify` your node's\n * data here.\n *\n * If the content is very large and can be lazy-loaded, e.g. a file on disk,\n * you can define a `loadNodeContent` function for this node and the node\n * content will be lazy loaded when it's needed.\n * @param {string} node.internal.contentDigest the digest for the content\n * of this node. Helps Gatsby avoid doing extra work on data that hasn't\n * changed.\n * @param {string} node.internal.description An optional field. Human\n * readable description of what this node represent / its source. It will\n * be displayed when type conflicts are found, making it easier to find\n * and correct type conflicts.\n * @returns {Promise} The returned Promise resolves when all cascading\n * `onCreateNode` API calls triggered by `createNode` have finished.\n * @example\n * createNode({\n *   // Data for the node.\n *   field1: `a string`,\n *   field2: 10,\n *   field3: true,\n *   ...arbitraryOtherData,\n *\n *   // Required fields.\n *   id: `a-node-id`,\n *   parent: `the-id-of-the-parent-node`, // or null if it's a source node without a parent\n *   children: [],\n *   internal: {\n *     type: `CoolServiceMarkdownField`,\n *     contentDigest: crypto\n *       .createHash(`md5`)\n *       .update(JSON.stringify(fieldData))\n *       .digest(`hex`),\n *     mediaType: `text/markdown`, // optional\n *     content: JSON.stringify(fieldData), // optional\n *     description: `Cool Service: \"Title of entry\"`, // optional\n *   }\n * })\n */\nconst createNode = (\n  node: any,\n  plugin?: Plugin,\n  actionOptions?: ActionOptions = {}\n) => {\n  if (!_.isObject(node)) {\n    return console.log(\n      chalk.bold.red(\n        `The node passed to the \"createNode\" action creator must be an object`\n      )\n    )\n  }\n\n  // Ensure the new node has an internals object.\n  if (!node.internal) {\n    node.internal = {}\n  }\n\n  // Ensure the new node has a children array.\n  if (!node.array && !_.isArray(node.children)) {\n    node.children = []\n  }\n\n  // Ensure the new node has a parent field\n  if (!node.parent) {\n    node.parent = null\n  }\n\n  // Tell user not to set the owner name themself.\n  if (node.internal.owner) {\n    report.error(JSON.stringify(node, null, 4))\n    report.panic(\n      chalk.bold.red(\n        `The node internal.owner field is set automatically by Gatsby and not by plugins`\n      )\n    )\n  }\n\n  // Add the plugin name to the internal object.\n  if (plugin) {\n    node.internal.owner = plugin.name\n  }\n\n  const result = Joi.validate(node, joiSchemas.nodeSchema)\n  if (result.error) {\n    console.log(chalk.bold.red(`The new node didn't pass validation`))\n    console.log(chalk.bold.red(result.error))\n    console.log(node)\n    return { type: `VALIDATION_ERROR`, error: true }\n  }\n\n  // Ensure node isn't directly setting fields.\n  if (node.fields) {\n    throw new Error(\n      stripIndent`\n      Plugins creating nodes can not set data on the reserved field \"fields\"\n      as this is reserved for plugins which wish to extend your nodes.\n\n      If your plugin didn't add \"fields\" you're probably seeing this\n      error because you're reusing an old node object.\n\n      Node:\n\n      ${JSON.stringify(node, null, 4)}\n\n      Plugin that created the node:\n\n      ${JSON.stringify(plugin, null, 4)}\n    `\n    )\n  }\n\n  node = trackInlineObjectsInRootNode(node, true)\n\n  const oldNode = getNode(node.id)\n\n  // Ensure the plugin isn't creating a node type owned by another\n  // plugin. Type \"ownership\" is first come first served.\n  if (plugin) {\n    let pluginName = plugin.name\n\n    if (!typeOwners[node.internal.type])\n      typeOwners[node.internal.type] = pluginName\n    else if (typeOwners[node.internal.type] !== pluginName)\n      throw new Error(stripIndent`\n        The plugin \"${pluginName}\" created a node of a type owned by another plugin.\n\n        The node type \"${node.internal.type}\" is owned by \"${\n        typeOwners[node.internal.type]\n      }\".\n\n        If you copy and pasted code from elsewhere, you'll need to pick a new type name\n        for your new node(s).\n\n        The node object passed to \"createNode\":\n\n        ${JSON.stringify(node, null, 4)}\n\n        The plugin creating the node:\n\n        ${JSON.stringify(plugin, null, 4)}\n      `)\n\n    // If the node has been created in the past, check that\n    // the current plugin is the same as the previous.\n    if (oldNode && oldNode.internal.owner !== pluginName) {\n      throw new Error(\n        stripIndent`\n        Nodes can only be updated by their owner. Node \"${node.id}\" is\n        owned by \"${oldNode.internal.owner}\" and another plugin \"${pluginName}\"\n        tried to update it.\n\n        `\n      )\n    }\n  }\n\n  if (actionOptions.parentSpan) {\n    actionOptions.parentSpan.setTag(`nodeId`, node.id)\n    actionOptions.parentSpan.setTag(`nodeType`, node.id)\n  }\n\n  let deleteActions\n  let updateNodeAction\n  // Check if the node has already been processed.\n  if (oldNode && !hasNodeChanged(node.id, node.internal.contentDigest)) {\n    updateNodeAction = {\n      type: `TOUCH_NODE`,\n      plugin,\n      ...actionOptions,\n      payload: node.id,\n    }\n  } else {\n    // Remove any previously created descendant nodes as they're all due\n    // to be recreated.\n    if (oldNode) {\n      const createDeleteAction = node => {\n        return {\n          type: `DELETE_NODE`,\n          plugin,\n          ...actionOptions,\n          payload: node,\n        }\n      }\n      deleteActions = findChildrenRecursively(oldNode.children)\n        .map(getNode)\n        .map(createDeleteAction)\n    }\n\n    updateNodeAction = {\n      type: `CREATE_NODE`,\n      plugin,\n      oldNode,\n      ...actionOptions,\n      payload: node,\n    }\n  }\n\n  if (deleteActions && deleteActions.length) {\n    return [...deleteActions, updateNodeAction]\n  } else {\n    return updateNodeAction\n  }\n}\n\nactions.createNode = (...args) => dispatch => {\n  const actions = createNode(...args)\n  dispatch(actions)\n  const createNodeAction = (Array.isArray(actions) ? actions : [actions]).find(\n    action => action.type === `CREATE_NODE`\n  )\n\n  if (!createNodeAction) {\n    return undefined\n  }\n\n  const { payload: node, traceId, parentSpan } = createNodeAction\n  return apiRunnerNode(`onCreateNode`, {\n    node,\n    traceId,\n    parentSpan,\n    traceTags: { nodeId: node.id, nodeType: node.internal.type },\n  })\n}\n\n/**\n * \"Touch\" a node. Tells Gatsby a node still exists and shouldn't\n * be garbage collected. Primarily useful for source plugins fetching\n * nodes from a remote system that can return only nodes that have\n * updated. The source plugin then touches all the nodes that haven't\n * updated but still exist so Gatsby knows to keep them.\n * @param {Object} $0\n * @param {string} $0.nodeId The id of a node\n * @example\n * touchNode({ nodeId: `a-node-id` })\n */\nactions.touchNode = (options: any, plugin?: Plugin) => {\n  let nodeId = _.get(options, `nodeId`)\n\n  // Check if using old method signature. Warn about incorrect usage\n  if (typeof options === `string`) {\n    console.warn(\n      `Calling \"touchNode\" with a nodeId is deprecated. Please pass an object containing a nodeId instead: touchNode({ nodeId: 'a-node-id' })`\n    )\n\n    if (plugin && plugin.name) {\n      console.log(`\"touchNode\" was called by ${plugin.name}`)\n    }\n\n    nodeId = options\n  }\n\n  return {\n    type: `TOUCH_NODE`,\n    plugin,\n    payload: nodeId,\n  }\n}\n\ntype CreateNodeInput = {\n  node: Object,\n  fieldName?: string,\n  fieldValue?: string,\n  name?: string,\n  value: any,\n}\n/**\n * Extend another node. The new node field is placed under the `fields`\n * key on the extended node object.\n *\n * Once a plugin has claimed a field name the field name can't be used by\n * other plugins.  Also since nodes are immutable, you can't mutate the node\n * directly. So to extend another node, use this.\n * @param {Object} $0\n * @param {Object} $0.node the target node object\n * @param {string} $0.fieldName [deprecated] the name for the field\n * @param {string} $0.fieldValue [deprecated] the value for the field\n * @param {string} $0.name the name for the field\n * @param {string} $0.value the value for the field\n * @example\n * createNodeField({\n *   node,\n *   name: `happiness`,\n *   value: `is sweet graphql queries`\n * })\n *\n * // The field value is now accessible at node.fields.happiness\n */\nactions.createNodeField = (\n  { node, name, value, fieldName, fieldValue }: CreateNodeInput,\n  plugin: Plugin,\n  actionOptions?: ActionOptions\n) => {\n  if (fieldName) {\n    console.warn(\n      `Calling \"createNodeField\" with \"fieldName\" is deprecated. Use \"name\" instead`\n    )\n    if (!name) {\n      name = fieldName\n    }\n  }\n  if (fieldValue) {\n    console.warn(\n      `Calling \"createNodeField\" with \"fieldValue\" is deprecated. Use \"value\" instead`\n    )\n    if (!value) {\n      value = fieldValue\n    }\n  }\n  // Ensure required fields are set.\n  if (!node.internal.fieldOwners) {\n    node.internal.fieldOwners = {}\n  }\n  if (!node.fields) {\n    node.fields = {}\n  }\n\n  // Normalized name of the field that will be used in schema\n  const schemaFieldName = _.includes(name, `___NODE`)\n    ? name.split(`___`)[0]\n    : name\n\n  // Check that this field isn't owned by another plugin.\n  const fieldOwner = node.internal.fieldOwners[schemaFieldName]\n  if (fieldOwner && fieldOwner !== plugin.name) {\n    throw new Error(\n      stripIndent`\n      A plugin tried to update a node field that it doesn't own:\n\n      Node id: ${node.id}\n      Plugin: ${plugin.name}\n      name: ${name}\n      value: ${value}\n      `\n    )\n  }\n\n  // Update node\n  node.fields[name] = value\n  node.internal.fieldOwners[schemaFieldName] = plugin.name\n\n  return {\n    type: `ADD_FIELD_TO_NODE`,\n    plugin,\n    ...actionOptions,\n    payload: node,\n  }\n}\n\n/**\n * Creates a link between a parent and child node. This is used when you\n * transform content from a node creating a new child node. You need to add\n * this new child node to the `children` array of the parent but since you\n * don't have direct access to the immutable parent node, use this action\n * instead.\n * @param {Object} $0\n * @param {Object} $0.parent the parent node object\n * @param {Object} $0.child the child node object\n * @example\n * createParentChildLink({ parent: parentNode, child: childNode })\n */\nactions.createParentChildLink = (\n  { parent, child }: { parent: any, child: any },\n  plugin?: Plugin\n) => {\n  // Update parent\n  parent.children.push(child.id)\n  parent.children = _.uniq(parent.children)\n\n  return {\n    type: `ADD_CHILD_NODE_TO_PARENT_NODE`,\n    plugin,\n    payload: parent,\n  }\n}\n\n/**\n * Merge additional configuration into the current webpack config. A few\n * configurations options will be ignored if set, in order to try prevent accidental breakage.\n * Specifically, any change to `entry`, `output`, `target`, or `resolveLoaders` will be ignored.\n *\n * For full control over the webpack config, use `replaceWebpackConfig()`.\n *\n * @param {Object} config partial webpack config, to be merged into the current one\n */\nactions.setWebpackConfig = (config: Object, plugin?: ?Plugin = null) => {\n  return {\n    type: `SET_WEBPACK_CONFIG`,\n    plugin,\n    payload: config,\n  }\n}\n\n/**\n * Completely replace the webpack config for the current stage. This can be\n * dangerous and break Gatsby if certain configuration options are changed.\n *\n * Generally only useful for cases where you need to handle config merging logic\n * yourself, in which case consider using `webpack-merge`.\n *\n * @param {Object} config complete webpack config\n */\nactions.replaceWebpackConfig = (config: Object, plugin?: ?Plugin = null) => {\n  return {\n    type: `REPLACE_WEBPACK_CONFIG`,\n    plugin,\n    payload: config,\n  }\n}\n\n/**\n * Set top-level Babel options. Plugins and presets will be ignored. Use\n * setBabelPlugin and setBabelPreset for this.\n * @param {Object} config An options object in the shape of a normal babelrc JavaScript object\n * @example\n * setBabelOptions({\n *   options: {\n *     sourceMaps: `inline`,\n *   }\n * })\n */\nactions.setBabelOptions = (options: Object, plugin?: ?Plugin = null) => {\n  // Validate\n  let name = `The plugin \"${plugin.name}\"`\n  if (plugin.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  if (!_.isObject(options)) {\n    console.log(`${name} must pass an object to \"setBabelOptions\"`)\n    console.log(JSON.stringify(options, null, 4))\n    if (process.env.NODE_ENV !== `test`) {\n      process.exit(1)\n    }\n  }\n\n  if (!_.isObject(options.options)) {\n    console.log(`${name} must pass options to \"setBabelOptions\"`)\n    console.log(JSON.stringify(options, null, 4))\n    if (process.env.NODE_ENV !== `test`) {\n      process.exit(1)\n    }\n  }\n\n  return {\n    type: `SET_BABEL_OPTIONS`,\n    plugin,\n    payload: options,\n  }\n}\n\n/**\n * Add new plugins or merge options into existing Babel plugins.\n * @param {Object} config A config object describing the Babel plugin to be added.\n * @param {string} config.name The name of the Babel plugin\n * @param {Object} config.options Options to pass to the Babel plugin.\n * @example\n * setBabelPlugin({\n *   name:  `babel-plugin-emotion`,\n *   options: {\n *     sourceMap: true,\n *   },\n * })\n */\nactions.setBabelPlugin = (config: Object, plugin?: ?Plugin = null) => {\n  // Validate\n  let name = `The plugin \"${plugin.name}\"`\n  if (plugin.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  if (!config.name) {\n    console.log(`${name} must set the name of the Babel plugin`)\n    console.log(JSON.stringify(config, null, 4))\n    if (process.env.NODE_ENV !== `test`) {\n      process.exit(1)\n    }\n  }\n  if (!config.options) {\n    config.options = {}\n  }\n  return {\n    type: `SET_BABEL_PLUGIN`,\n    plugin,\n    payload: config,\n  }\n}\n\n/**\n * Add new presets or merge options into existing Babel presets.\n * @param {Object} config A config object describing the Babel plugin to be added.\n * @param {string} config.name The name of the Babel preset.\n * @param {Object} config.options Options to pass to the Babel preset.\n * @example\n * setBabelPreset({\n *   name: `@babel/preset-react`,\n *   options: {\n *     pragma: `Glamor.createElement`,\n *   },\n * })\n */\nactions.setBabelPreset = (config: Object, plugin?: ?Plugin = null) => {\n  // Validate\n  let name = `The plugin \"${plugin.name}\"`\n  if (plugin.name === `default-site-plugin`) {\n    name = `Your site's \"gatsby-node.js\"`\n  }\n  if (!config.name) {\n    console.log(`${name} must set the name of the Babel preset`)\n    console.log(JSON.stringify(config, null, 4))\n    if (process.env.NODE_ENV !== `test`) {\n      process.exit(1)\n    }\n  }\n  if (!config.options) {\n    config.options = {}\n  }\n  return {\n    type: `SET_BABEL_PRESET`,\n    plugin,\n    payload: config,\n  }\n}\n\n/**\n * Create a \"job\". This is a long-running process that are generally\n * started as side-effects to GraphQL queries.\n * [`gatsby-plugin-sharp`](/packages/gatsby-plugin-sharp/) uses this for\n * example.\n *\n * Gatsby doesn't finish its bootstrap until all jobs are ended.\n * @param {Object} job A job object with at least an id set\n * @param {id} job.id The id of the job\n * @example\n * createJob({ id: `write file id: 123`, fileName: `something.jpeg` })\n */\nactions.createJob = (job: Job, plugin?: ?Plugin = null) => {\n  return {\n    type: `CREATE_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * Set (update) a \"job\". Sometimes on really long running jobs you want\n * to update the job as it continues.\n *\n * @param {Object} job A job object with at least an id set\n * @param {id} job.id The id of the job\n * @example\n * setJob({ id: `write file id: 123`, progress: 50 })\n */\nactions.setJob = (job: Job, plugin?: ?Plugin = null) => {\n  return {\n    type: `SET_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * End a \"job\".\n *\n * Gatsby doesn't finish its bootstrap until all jobs are ended.\n * @param {Object} job  A job object with at least an id set\n * @param {id} job.id The id of the job\n * @example\n * endJob({ id: `write file id: 123` })\n */\nactions.endJob = (job: Job, plugin?: ?Plugin = null) => {\n  return {\n    type: `END_JOB`,\n    plugin,\n    payload: job,\n  }\n}\n\n/**\n * Set plugin status. A plugin can use this to save status keys e.g. the last\n * it fetched something. These values are persisted between runs of Gatsby.\n *\n * @param {Object} status  An object with arbitrary values set\n * @example\n * setPluginStatus({ lastFetched: Date.now() })\n */\nactions.setPluginStatus = (\n  status: { [key: string]: mixed },\n  plugin: Plugin\n) => {\n  return {\n    type: `SET_PLUGIN_STATUS`,\n    plugin,\n    payload: status,\n  }\n}\n\n// Check if path is absolute and add pathPrefix in front if it's not\nconst maybeAddPathPrefix = (path, pathPrefix) => {\n  const parsed = url.parse(path)\n  const isRelativeProtocol = path.startsWith(`//`)\n  return `${\n    parsed.protocol != null || isRelativeProtocol ? `` : pathPrefix\n  }${path}`\n}\n\n/**\n * Create a redirect from one page to another. Server redirects don't work out\n * of the box. You must have a plugin setup to integrate the redirect data with\n * your hosting technology e.g. the [Netlify\n * plugin](/packages/gatsby-plugin-netlify/), or the [Amazon S3\n * plugin](/packages/gatsby-plugin-s3/).\n *\n * @param {Object} redirect Redirect data\n * @param {string} redirect.fromPath Any valid URL. Must start with a forward slash\n * @param {boolean} redirect.isPermanent This is a permanent redirect; defaults to temporary\n * @param {string} redirect.toPath URL of a created page (see `createPage`)\n * @param {boolean} redirect.redirectInBrowser Redirects are generally for redirecting legacy URLs to their new configuration. If you can't update your UI for some reason, set `redirectInBrowser` to true and Gatsby will handle redirecting in the client as well.\n * @param {boolean} redirect.force (Plugin-specific) Will trigger the redirect even if the `fromPath` matches a piece of content. This is not part of the Gatsby API, but implemented by (some) plugins that configure hosting provider redirects\n * @param {number} redirect.statusCode (Plugin-specific) Manually set the HTTP status code. This allows you to create a rewrite (status code 200) or custom error page (status code 404). Note that this will override the `isPermanent` option which also sets the status code. This is not part of the Gatsby API, but implemented by (some) plugins that configure hosting provider redirects\n * @example\n * // Generally you create redirects while creating pages.\n * exports.createPages = ({ graphql, actions }) => {\n *   const { createRedirect } = actions\n *   createRedirect({ fromPath: '/old-url', toPath: '/new-url', isPermanent: true })\n *   createRedirect({ fromPath: '/url', toPath: '/zn-CH/url', Language: 'zn' })\n *   createRedirect({ fromPath: '/not_so-pretty_url', toPath: '/pretty/url', statusCode: 200 })\n *   // Create pages here\n * }\n */\nactions.createRedirect = ({\n  fromPath,\n  isPermanent = false,\n  redirectInBrowser = false,\n  toPath,\n  ...rest\n}) => {\n  let pathPrefix = ``\n  if (store.getState().program.prefixPaths) {\n    pathPrefix = store.getState().config.pathPrefix\n  }\n\n  return {\n    type: `CREATE_REDIRECT`,\n    payload: {\n      fromPath: maybeAddPathPrefix(fromPath, pathPrefix),\n      isPermanent,\n      redirectInBrowser,\n      toPath: maybeAddPathPrefix(toPath, pathPrefix),\n      ...rest,\n    },\n  }\n}\n\n/**\n * Create a dependency between a page and data.\n *\n * @param {Object} $0\n * @param {string} $0.path the path to the page\n * @param {string} $0.nodeId A node ID\n * @param {string} $0.connection A connection type\n * @private\n */\nactions.createPageDependency = (\n  {\n    path,\n    nodeId,\n    connection,\n  }: { path: string, nodeId: string, connection: string },\n  plugin: string = ``\n) => {\n  console.warn(\n    `Calling \"createPageDependency\" directly from actions in deprecated. Use \"createPageDependency\" from \"gatsby/dist/redux/actions/add-page-dependency\".`\n  )\n  return {\n    type: `CREATE_COMPONENT_DEPENDENCY`,\n    plugin,\n    payload: {\n      path,\n      nodeId,\n      connection,\n    },\n  }\n}\n\nmodule.exports = { actions }\n"],"file":"public.js"}