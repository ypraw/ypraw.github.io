{"version":3,"sources":["../../src/redux/persist.js"],"names":["v8","require","fs","stringify","objectToMap","obj","map","Map","Object","keys","forEach","key","set","mapToObject","value","jsonStringify","contents","staticQueryComponents","components","nodes","jsonParse","buffer","parsed","JSON","parse","toString","useV8","Boolean","serialize","deserialize","process","cwd","file","readFromCache","readFileSync","writeToCache","writeFileSync","module","exports"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAE,IAAF,CAAlB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAE,qBAAF,CAAzB;;AAEA,MAAMG,WAAW,GAAGC,GAAG,IAAI;AACzB,QAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,OAAjB,CAAyBC,GAAG,IAAI;AAC9BL,IAAAA,GAAG,CAACM,GAAJ,CAAQD,GAAR,EAAaN,GAAG,CAACM,GAAD,CAAhB;AACD,GAFD;AAGA,SAAOL,GAAP;AACD,CAND;;AAQA,MAAMO,WAAW,GAAGP,GAAG,IAAI;AACzB,QAAMD,GAAG,GAAG,EAAZ;;AACA,uBAAyBC,GAAzB,kHAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,QAApBK,GAAoB;AAAA,QAAfG,KAAe;AAC5BT,IAAAA,GAAG,CAACM,GAAD,CAAH,GAAWG,KAAX;AACD;;AACD,SAAOT,GAAP;AACD,CAND;;AAQA,MAAMU,aAAa,GAAGC,QAAQ,IAAI;AAChCA,EAAAA,QAAQ,CAACC,qBAAT,GAAiCJ,WAAW,CAACG,QAAQ,CAACC,qBAAV,CAA5C;AACAD,EAAAA,QAAQ,CAACE,UAAT,GAAsBL,WAAW,CAACG,QAAQ,CAACE,UAAV,CAAjC;AACAF,EAAAA,QAAQ,CAACG,KAAT,GAAiBH,QAAQ,CAACG,KAAT,GAAiBN,WAAW,CAACG,QAAQ,CAACG,KAAV,CAA5B,GAA+C,EAAhE;AACA,SAAOhB,SAAS,CAACa,QAAD,EAAW,IAAX,EAAiB,CAAjB,CAAhB;AACD,CALD;;AAOA,MAAMI,SAAS,GAAGC,MAAM,IAAI;AAC1B,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,QAAP,CAAiB,MAAjB,CAAX,CAAf;AACAH,EAAAA,MAAM,CAACL,qBAAP,GAA+Bb,WAAW,CAACkB,MAAM,CAACL,qBAAR,CAA1C;AACAK,EAAAA,MAAM,CAACJ,UAAP,GAAoBd,WAAW,CAACkB,MAAM,CAACJ,UAAR,CAA/B;AACAI,EAAAA,MAAM,CAACH,KAAP,GAAef,WAAW,CAACkB,MAAM,CAACH,KAAP,IAAgB,EAAjB,CAA1B;AACA,SAAOG,MAAP;AACD,CAND;;AAQA,MAAMI,KAAK,GAAGC,OAAO,CAAC3B,EAAE,CAAC4B,SAAJ,CAArB;;cACuCF,KAAK,GACxC,CAAC1B,EAAE,CAAC4B,SAAJ,EAAe5B,EAAE,CAAC6B,WAAlB,EAAgC,GAAEC,OAAO,CAACC,GAAR,EAAc,qBAAhD,CADwC,GAExC,CAAChB,aAAD,EAAgBK,SAAhB,EAA4B,GAAEU,OAAO,CAACC,GAAR,EAAc,0BAA5C,C;MAFGH,S;MAAWC,W;MAAaG,I;;AAI/B,MAAMC,aAAa,GAAG,MAAMJ,WAAW,CAAC3B,EAAE,CAACgC,YAAH,CAAgBF,IAAhB,CAAD,CAAvC;;AAEA,MAAMG,YAAY,GAAGnB,QAAQ,IAAI;AAC/Bd,EAAAA,EAAE,CAACkC,aAAH,CAAiBJ,IAAjB,EAAuBJ,SAAS,CAACZ,QAAD,CAAhC;AACD,CAFD;;AAIAqB,MAAM,CAACC,OAAP,GAAiB;AAAEL,EAAAA,aAAF;AAAiBE,EAAAA;AAAjB,CAAjB","sourcesContent":["const v8 = require(`v8`)\nconst fs = require(`fs-extra`)\nconst stringify = require(`json-stringify-safe`)\n\nconst objectToMap = obj => {\n  const map = new Map()\n  Object.keys(obj).forEach(key => {\n    map.set(key, obj[key])\n  })\n  return map\n}\n\nconst mapToObject = map => {\n  const obj = {}\n  for (let [key, value] of map) {\n    obj[key] = value\n  }\n  return obj\n}\n\nconst jsonStringify = contents => {\n  contents.staticQueryComponents = mapToObject(contents.staticQueryComponents)\n  contents.components = mapToObject(contents.components)\n  contents.nodes = contents.nodes ? mapToObject(contents.nodes) : {}\n  return stringify(contents, null, 2)\n}\n\nconst jsonParse = buffer => {\n  const parsed = JSON.parse(buffer.toString(`utf8`))\n  parsed.staticQueryComponents = objectToMap(parsed.staticQueryComponents)\n  parsed.components = objectToMap(parsed.components)\n  parsed.nodes = objectToMap(parsed.nodes || {})\n  return parsed\n}\n\nconst useV8 = Boolean(v8.serialize)\nconst [serialize, deserialize, file] = useV8\n  ? [v8.serialize, v8.deserialize, `${process.cwd()}/.cache/redux.state`]\n  : [jsonStringify, jsonParse, `${process.cwd()}/.cache/redux-state.json`]\n\nconst readFromCache = () => deserialize(fs.readFileSync(file))\n\nconst writeToCache = contents => {\n  fs.writeFileSync(file, serialize(contents))\n}\n\nmodule.exports = { readFromCache, writeToCache }\n"],"file":"persist.js"}